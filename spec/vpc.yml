openapi: 3.0.0
info:
  title: VPC API
  description: Description of the VPC API 
  version: 1.0.1
servers:
  - url: https://anypoint.mulesoft.com/cloudhub/api/
    description: Anypoint Cloudhub 
  - url: https://eu1.anypoint.mulesoft.com/cloudhub/api/
    description: Anypoint Cloudhub EU

security:
  - bearerAuth: [] 

paths:
  /organizations/{orgId}/vpcs:
    parameters:
      - in: path
        name: orgId
        description: The organization Id
        required: true
        schema:
          type: string
    get:
      summary: Returns a list of vpcs.
      description: Returns a list of VPCs for the given organization id
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':    # status code
          $ref: '#/components/responses/SuccessListVpcs'
    post:
      summary: Creates a new VPC in the provided organization.
      description: Creates a new VPC for the probided organization
      requestBody:
        description: VPC Object don't
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vpcCore'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '201':
          $ref: '#/components/responses/SuccessPostVPC'

  /organizations/{orgId}/vpcs/{vpcId}:
    parameters:
      - in: path
        name: orgId
        description: The organization Id
        required: true
        schema:
          type: string
      - in: path
        name: vpcId
        description: The VPC Id
        required: true
        schema:
          type: string
    get:
      summary: Returns the vpc instance with the given id.
      description: Returns the vpc with the given id in the given organization id
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':    # status code
          $ref: '#/components/responses/SuccessGetVpc'
    put:
      summary: Update the VPC configuration
      description: Changes the configuration of the VPC by overriding the values of the properties passed in the JSON. ownerId, region and cidrBlock cannot be overriden. Organizations that do not own the VPC can only update isDefault and associatedEnvironments.
      requestBody:
        description: VPC Object don't
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vpcCore'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          $ref: '#/components/responses/BadRequestError'
        

    delete:
      summary: Delete a VPC by its id.
      description: Delete a VPC by its given id for the given organization id. 
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '204':    # status code
          $ref: '#/components/responses/SuccessDeleteVpc'



components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      description: Bad request response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                title: the response status code 
                default: 400
              message:
                type: string
                title: the error message
                example: vpcs limit has been reached (max=1, use=1) for the organization 
    SuccessGetVpc:
      description: Success response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/vpc'
    SuccessPostVPC:
      description: Success response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/vpc'
    SuccessDeleteVpc:
      description: Success response
    SuccessListVpcs:
      description: Success response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                title: List of vpcs
                items:
                  $ref: '#/components/schemas/vpc'
              total:
                type: integer
                title: Total number of results

  schemas:
    vpc:
      title: vpc schema
      allOf:
        - type: object
          title: vpcId schema
          required:
            - id
          properties:
            id:
              description: The vpc Id
              title: id schema
              type: string
              example: 'vpc-0b111d1a1ace2a12f'
        - $ref: "#/components/schemas/vpcCore"
    vpcCore:
      title: vpcCore schema
      type: object
      properties:
        isDefault:
          type: boolean
          title: isDefault schema
          default: false
        name:
          type: string
          title: name schema
          example: "myAwesomeVPC"
        ownerId:
          type: string
          title: ownerId schema
          example: "0000-1111-2222-3333-4444"
        region:
          type: string
          title: The region schema
          example: "us-east-1"
        sharedWith:
          title: sharedWith schema 
          type: array
          default: []
          example: ["0000000-1111-2222-3333-44444444444"]
          items:
            type: string
        associatedEnvironments:
          default: []
          example: ["eeeeb145-6f79-402d-85fc-8c90905d2490"]
          title: associatedEnvironments schema
          type: array
          items:
            description: Environment Id.
            title: associatedEnvironment schema
            type: string
        cidrBlock:
          default: "10.0.0.0/20"
          description: An explanation about the purpose of this instance.
          title: cidrBlock schema
          type: string
        firewallRules:
          default: []
          example: 
            - cidrBlock: "0.0.0.0/0"
              protocol: "tcp"
              fromPort: 8081
              toPort: 8082
            - cidrBlock: "192.168.1.0/24"
              protocol: "tcp"
              fromPort: 8091
              toPort: 8092
          title: firewallRules schema
          type: array
          items:
            type: object
            required:
              - cidrBlock
              - protocol
              - fromPort
              - toPort
            properties:
              cidrBlock:
                default: ""
                description: An explanation about the purpose of this instance.
                title: cidrBlock schema
                type: string
              fromPort:
                default: 0
                description: An explanation about the purpose of this instance.
                title: fromPort schema
                type: integer
              protocol:
                default: ""
                description: An explanation about the purpose of this instance.
                title: protocol schema
                type: string
              toPort:
                default: 0
                description: An explanation about the purpose of this instance.
                title: toPort schema
                type: integer
        internalDns:
          title: internalDns schema
          type: object
          default:
            dnsServers: []
            specialDomains: []
          required:
            - dnsServers
            - specialDomains
          properties:
            dnsServers:
              default: []
              title: dnsServers schema
              type: array
              items:
                type: string
            specialDomains:
              title: specialDomains schema
              type: array
              default: []
              items:
                type: string
        vpcRoutes:
          type: array
          title: vpcRoutes schema
          default: []
          example:
            - Next Hop: "Local"
              CIDR: "10.0.0.0/20"
            - Next Hop: "Internet Gateway"
              CIDR: "0.0.0.0/0"
          items:
            title: vpcRoute schema
            type: object
            required:
              - Next Hop
              - CIDR
            properties:
              CIDR:
                default: ""
                title: The CIDR schema
                type: string
              Next Hop:
                default: ""
                title: The Next Hop schema
                type: string

