openapi: 3.0.0

info:
  title: Anypoint MQ Exchange Binding specfication
  description: Anypoint MQ Exchange Binding API specification
  version: 1.0.0

servers:
  - url: https://anypoint.mulesoft.com/mq/admin/api/v1/
    description: Anypoint Cloudhub 
  - url: https://eu1.anypoint.mulesoft.com/mq/admin/api/v1/
    description: Anypoint Cloudhub EU
  - url: https://gov.anypoint.mulesoft.com/mq/admin/api/v1/
    description: Anypoint Cloudhub GOV

security:
  - bearerAuth: [] 
      
paths:
  /organizations/{orgId}/environments/{envId}/regions/{regionId}/bindings/exchanges/{exchangeId}/queues/{queueId}:
    parameters:
      - in: path
        name: orgId
        description: The organization Id
        required: true
        schema:
          type: string
      - in: path
        name: envId
        description: The environment id
        required: true
        schema:
          type: string
      - in: path
        name: regionId
        description: The region id
        required: true
        schema:
          type: string
      - in: path
        name: exchangeId
        description: The id of a specific exchange
        required: true
        schema:
          type: string
      - in: path
        name: queueId
        description: The id of a specific exchange queue binding
        required: true
        schema:
          type: string
    get:
      description: Get details about a queue bound to an exchange
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/SuccessGetExchangeBinding'
    put:
      description: Create exchange queue binding
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/SuccessCreateExchangeBinding'
    delete:
      description: Delete an exchange queue binding
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '204':
          $ref: '#/components/responses/SuccessDeleteExchangeBinding'

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      description: Bad request response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                title: the response status code 
                default: 400
              message:
                type: string
                title: the error message
                example: api error message 
    NotFound:
      description: Queue not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                title: the response status code 
                default: 404
              message:
                type: string
                title: the error message
                example: api error message
    SuccessGetExchangeBinding:
      description: Success response
      content:
        application/json:
          schema:
            type: object
            title: exchange from GET
            $ref: '#/components/schemas/exchangeBinding'
    SuccessCreateExchangeBinding:
      description: Successfully created exchange
      content:
        application/json:
          schema:
            type: object
            title: exchange created after PUT
            $ref: '#/components/schemas/exchangeBinding'
    SuccessDeleteExchangeBinding:
      description: Success response

  schemas:
    exchangeBinding:
      title: exchangeBinding
      type: object
      properties:
        queueId:
          type: string
          title: queueId
        exchangeId:
          type: string
          title: exchangeId