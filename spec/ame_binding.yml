openapi: 3.0.0

info:
  title: Anypoint MQ Exchange Binding specfication
  description: Anypoint MQ Exchange Binding API specification
  version: 1.0.0

servers:
  - url: https://anypoint.mulesoft.com/mq/admin/api/v1/
    description: Anypoint Cloudhub
  - url: https://eu1.anypoint.mulesoft.com/mq/admin/api/v1/
    description: Anypoint Cloudhub EU
  - url: https://gov.anypoint.mulesoft.com/mq/admin/api/v1/
    description: Anypoint Cloudhub GOV

security:
  - bearerAuth: []

paths:
  /organizations/{orgId}/environments/{envId}/regions/{regionId}/bindings/exchanges/{exchangeId}/queues/{queueId}:
    parameters:
      - in: path
        name: orgId
        description: The organization Id
        required: true
        schema:
          type: string
      - in: path
        name: envId
        description: The environment id
        required: true
        schema:
          type: string
      - in: path
        name: regionId
        description: The region id
        required: true
        schema:
          type: string
      - in: path
        name: exchangeId
        description: The id of a specific exchange
        required: true
        schema:
          type: string
      - in: path
        name: queueId
        description: The id of a specific exchange queue binding
        required: true
        schema:
          type: string
    get:
      parameters:
        - in: query
          name: inclusion
          description: Defines what to fetch
          required: false
          schema:
            type: string
            enum:
              - all
              - minimal
      operationId: GetAMEBinding
      description: Get details about a queue bound to an exchange
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/SuccessGetExchangeBinding'
    put:
      operationId: CreateAMEBinding
      description: Create exchange queue binding
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/SuccessCreateExchangeBinding'
    delete:
      operationId: DeleteAMEBinding
      description: Delete an exchange queue binding
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '204':
          $ref: '#/components/responses/SuccessDeleteExchangeBinding'

  /organizations/{orgId}/environments/{envId}/regions/{regionId}/bindings/exchanges/{exchangeId}/queues/{queueId}/rules/routing:
    parameters:
      - in: path
        name: orgId
        description: The organization Id
        required: true
        schema:
          type: string
      - in: path
        name: envId
        description: The environment id
        required: true
        schema:
          type: string
      - in: path
        name: regionId
        description: The region id
        required: true
        schema:
          type: string
      - in: path
        name: exchangeId
        description: The id of a specific exchange
        required: true
        schema:
          type: string
      - in: path
        name: queueId
        description: The id of a specific exchange queue binding
        required: true
        schema:
          type: string
    put:
      operationId: CreateAMEBindingRule
      description: Create exchange queue binding rule
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/SuccessCreateExchangeBindingRules'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: AMEBindingRuleBody
              properties:
                routingRules:
                  $ref: "#/components/schemas/routingRules"
    delete:
      operationId: DeleteAMEBindingRule
      description: Delete an exchange queue binding Rule
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '204':
          $ref: '#/components/responses/SuccessDeleteExchangeBindingRules'

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      description: Bad request response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                title: the response status code
                default: 400
              message:
                type: string
                title: the error message
                example: api error message
    NotFound:
      description: Queue not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                title: the response status code
                default: 404
              message:
                type: string
                title: the error message
                example: api error message
    SuccessGetExchangeBinding:
      description: Success response
      content:
        application/json:
          schema:
            type: object
            title: exchange from GET
            $ref: '#/components/schemas/exchangeBindingWithRules'
    SuccessCreateExchangeBinding:
      description: Successfully created exchange
      content:
        application/json:
          schema:
            type: object
            title: exchange created after PUT
            $ref: '#/components/schemas/exchangeBinding'
    SuccessDeleteExchangeBinding:
      description: Success response
    SuccessCreateExchangeBindingRules:
      description: Successfully created exchange binding rules
      content:
        application/json:
          schema:
            type: object
            title: exchange binding rules created after PUT
            $ref: '#/components/schemas/exchangeBindingRules'
    SuccessDeleteExchangeBindingRules:
      description: Success response

  schemas:
    exchangeBinding:
      title: exchangeBinding
      type: object
      properties:
        queueId:
          type: string
          title: queueId
        exchangeId:
          type: string
          title: exchangeId

    exchangeBindingWithRules:
      allOf:
        - $ref: "#/components/schemas/exchangeBinding"
        - properties:
            rules:
              $ref: "#/components/schemas/routingRules"

    exchangeBindingRules:
      title: exchangeBinding
      type: object
      properties:
        queueId:
          type: string
          title: queueId
        exchangeId:
          type: string
          title: exchangeId
        routingRules:
          $ref: "#/components/schemas/routingRules"

    routingRules:
      type: array
      title: routingRules
      items:
        type: object
        title: routingRule


    # routingRulesStr2Str:
    #   type: array
    #   title: routingRulesStr2Str
    #   items:
    #     type: object
    #     title: routingRuleStr2Str
    #     properties:
    #       propertyName:
    #         type: string
    #         title: propertyName
    #       propertyType:
    #         type: string
    #         title: propertyType
    #         enum:
    #           - STRING
    #       matcherType:
    #         type: string
    #         title: matcherType
    #         enum:
    #           - EQ
    #           - PREFIX
    #       value:
    #         type: string
    #         title: value

    # routingRulesStr2Bool:
    #   type: array
    #   title: routingRulesStr2Bool
    #   items:
    #     type: object
    #     title: routingRuleStr2Bool
    #     properties:
    #       propertyName:
    #         type: string
    #         title: propertyName
    #       propertyType:
    #         type: string
    #         title: propertyType
    #         enum:
    #           - STRING
    #       matcherType:
    #         type: string
    #         title: matcherType
    #         enum:
    #           - EXISTS
    #       value:
    #         type: boolean
    #         title: value

    # routingRulesStr2Arr:
    #   type: array
    #   title: routingRulesStr2Arr
    #   items:
    #     type: object
    #     title: routingRuleStr2Arr
    #     properties:
    #       propertyName:
    #         type: string
    #         title: propertyName
    #       propertyType:
    #         type: string
    #         title: propertyType
    #         enum:
    #           - STRING
    #       matcherType:
    #         type: string
    #         title: matcherType
    #         enum:
    #           - ANY_OF
    #           - NONE_OF
    #       value:
    #         type: array
    #         title: value
    #         items:
    #           type: string

    # routingRulesNum2Num:
    #   type: array
    #   title: routingRulesNum2Num
    #   items:
    #     type: object
    #     title: routingRuleNum2Num
    #     properties:
    #       propertyName:
    #         type: string
    #         title: propertyName
    #       propertyType:
    #         type: string
    #         title: propertyType
    #         enum:
    #           - NUMERIC
    #       matcherType:
    #         type: string
    #         title: matcherType
    #         enum:
    #           - EQ
    #           - LT
    #           - LE
    #           - GT
    #           - GE
    #       value:
    #         type: number
    #         title: value

    # routingRulesNum2Bool:
    #   type: array
    #   title: routingRulesNum2Bool
    #   items:
    #     type: object
    #     title: routingRuleNum2Bool
    #     properties:
    #       propertyName:
    #         type: string
    #         title: propertyName
    #       propertyType:
    #         type: string
    #         title: propertyType
    #         enum:
    #           - NUMERIC
    #       matcherType:
    #         type: string
    #         title: matcherType
    #         enum:
    #           - EXISTS
    #       value:
    #         type: boolean
    #         title: value

    # routingRulesNum2Arr:
    #   type: array
    #   title: routingRulesNum2Arr
    #   items:
    #     type: object
    #     title: routingRuleNum2Arr
    #     properties:
    #       propertyName:
    #         type: string
    #         title: propertyName
    #       propertyType:
    #         type: string
    #         title: propertyType
    #         enum:
    #           - NUMERIC
    #       matcherType:
    #         type: string
    #         title: matcherType
    #         enum:
    #           - RANGE
    #           - NONE_OF
    #       value:
    #         type: array
    #         title: value
    #         items:
    #           type: number

