/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// AuthModeAPIKey This can be used for HTTP Outbound authentication.
type AuthModeAPIKey struct {
	AuthModeBaseConfig
	ApiKey *string `json:"apiKey,omitempty"`
	HttpHeaderName *string `json:"httpHeaderName,omitempty"`
}

// NewAuthModeAPIKey instantiates a new AuthModeAPIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthModeAPIKey(authType string) *AuthModeAPIKey {
	this := AuthModeAPIKey{}
	this.AuthType = authType
	return &this
}

// NewAuthModeAPIKeyWithDefaults instantiates a new AuthModeAPIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthModeAPIKeyWithDefaults() *AuthModeAPIKey {
	this := AuthModeAPIKey{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *AuthModeAPIKey) GetApiKey() string {
	if o == nil || o.ApiKey == nil {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeAPIKey) GetApiKeyOk() (*string, bool) {
	if o == nil || o.ApiKey == nil {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *AuthModeAPIKey) HasApiKey() bool {
	if o != nil && o.ApiKey != nil {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *AuthModeAPIKey) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetHttpHeaderName returns the HttpHeaderName field value if set, zero value otherwise.
func (o *AuthModeAPIKey) GetHttpHeaderName() string {
	if o == nil || o.HttpHeaderName == nil {
		var ret string
		return ret
	}
	return *o.HttpHeaderName
}

// GetHttpHeaderNameOk returns a tuple with the HttpHeaderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeAPIKey) GetHttpHeaderNameOk() (*string, bool) {
	if o == nil || o.HttpHeaderName == nil {
		return nil, false
	}
	return o.HttpHeaderName, true
}

// HasHttpHeaderName returns a boolean if a field has been set.
func (o *AuthModeAPIKey) HasHttpHeaderName() bool {
	if o != nil && o.HttpHeaderName != nil {
		return true
	}

	return false
}

// SetHttpHeaderName gets a reference to the given string and assigns it to the HttpHeaderName field.
func (o *AuthModeAPIKey) SetHttpHeaderName(v string) {
	o.HttpHeaderName = &v
}

func (o AuthModeAPIKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedAuthModeBaseConfig, errAuthModeBaseConfig := json.Marshal(o.AuthModeBaseConfig)
	if errAuthModeBaseConfig != nil {
		return []byte{}, errAuthModeBaseConfig
	}
	errAuthModeBaseConfig = json.Unmarshal([]byte(serializedAuthModeBaseConfig), &toSerialize)
	if errAuthModeBaseConfig != nil {
		return []byte{}, errAuthModeBaseConfig
	}
	if o.ApiKey != nil {
		toSerialize["apiKey"] = o.ApiKey
	}
	if o.HttpHeaderName != nil {
		toSerialize["httpHeaderName"] = o.HttpHeaderName
	}
	return json.Marshal(toSerialize)
}

type NullableAuthModeAPIKey struct {
	value *AuthModeAPIKey
	isSet bool
}

func (v NullableAuthModeAPIKey) Get() *AuthModeAPIKey {
	return v.value
}

func (v *NullableAuthModeAPIKey) Set(val *AuthModeAPIKey) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthModeAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthModeAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthModeAPIKey(val *AuthModeAPIKey) *NullableAuthModeAPIKey {
	return &NullableAuthModeAPIKey{value: val, isSet: true}
}

func (v NullableAuthModeAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthModeAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


