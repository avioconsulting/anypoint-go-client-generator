/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// Endpoint struct for Endpoint
type Endpoint struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	EnvironmentId *string `json:"environmentId,omitempty"`
	EndpointTypeId *string `json:"endpointTypeId,omitempty"`
	PartnerId *string `json:"partnerId,omitempty"`
	EndpointRole *string `json:"endpointRole,omitempty"`
	EndpointType *string `json:"endpointType,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	SupportedFormatTypes *string `json:"supportedFormatTypes,omitempty"`
	Config *EndpointConfig `json:"config,omitempty"`
}

// NewEndpoint instantiates a new Endpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpoint() *Endpoint {
	this := Endpoint{}
	return &this
}

// NewEndpointWithDefaults instantiates a new Endpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointWithDefaults() *Endpoint {
	this := Endpoint{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Endpoint) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Endpoint) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Endpoint) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Endpoint) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Endpoint) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Endpoint) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Endpoint) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Endpoint) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Endpoint) SetDescription(v string) {
	o.Description = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *Endpoint) GetEnvironmentId() string {
	if o == nil || o.EnvironmentId == nil {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || o.EnvironmentId == nil {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *Endpoint) HasEnvironmentId() bool {
	if o != nil && o.EnvironmentId != nil {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *Endpoint) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetEndpointTypeId returns the EndpointTypeId field value if set, zero value otherwise.
func (o *Endpoint) GetEndpointTypeId() string {
	if o == nil || o.EndpointTypeId == nil {
		var ret string
		return ret
	}
	return *o.EndpointTypeId
}

// GetEndpointTypeIdOk returns a tuple with the EndpointTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetEndpointTypeIdOk() (*string, bool) {
	if o == nil || o.EndpointTypeId == nil {
		return nil, false
	}
	return o.EndpointTypeId, true
}

// HasEndpointTypeId returns a boolean if a field has been set.
func (o *Endpoint) HasEndpointTypeId() bool {
	if o != nil && o.EndpointTypeId != nil {
		return true
	}

	return false
}

// SetEndpointTypeId gets a reference to the given string and assigns it to the EndpointTypeId field.
func (o *Endpoint) SetEndpointTypeId(v string) {
	o.EndpointTypeId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *Endpoint) GetPartnerId() string {
	if o == nil || o.PartnerId == nil {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetPartnerIdOk() (*string, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *Endpoint) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *Endpoint) SetPartnerId(v string) {
	o.PartnerId = &v
}

// GetEndpointRole returns the EndpointRole field value if set, zero value otherwise.
func (o *Endpoint) GetEndpointRole() string {
	if o == nil || o.EndpointRole == nil {
		var ret string
		return ret
	}
	return *o.EndpointRole
}

// GetEndpointRoleOk returns a tuple with the EndpointRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetEndpointRoleOk() (*string, bool) {
	if o == nil || o.EndpointRole == nil {
		return nil, false
	}
	return o.EndpointRole, true
}

// HasEndpointRole returns a boolean if a field has been set.
func (o *Endpoint) HasEndpointRole() bool {
	if o != nil && o.EndpointRole != nil {
		return true
	}

	return false
}

// SetEndpointRole gets a reference to the given string and assigns it to the EndpointRole field.
func (o *Endpoint) SetEndpointRole(v string) {
	o.EndpointRole = &v
}

// GetEndpointType returns the EndpointType field value if set, zero value otherwise.
func (o *Endpoint) GetEndpointType() string {
	if o == nil || o.EndpointType == nil {
		var ret string
		return ret
	}
	return *o.EndpointType
}

// GetEndpointTypeOk returns a tuple with the EndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetEndpointTypeOk() (*string, bool) {
	if o == nil || o.EndpointType == nil {
		return nil, false
	}
	return o.EndpointType, true
}

// HasEndpointType returns a boolean if a field has been set.
func (o *Endpoint) HasEndpointType() bool {
	if o != nil && o.EndpointType != nil {
		return true
	}

	return false
}

// SetEndpointType gets a reference to the given string and assigns it to the EndpointType field.
func (o *Endpoint) SetEndpointType(v string) {
	o.EndpointType = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *Endpoint) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *Endpoint) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *Endpoint) SetVisibility(v string) {
	o.Visibility = &v
}

// GetSupportedFormatTypes returns the SupportedFormatTypes field value if set, zero value otherwise.
func (o *Endpoint) GetSupportedFormatTypes() string {
	if o == nil || o.SupportedFormatTypes == nil {
		var ret string
		return ret
	}
	return *o.SupportedFormatTypes
}

// GetSupportedFormatTypesOk returns a tuple with the SupportedFormatTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetSupportedFormatTypesOk() (*string, bool) {
	if o == nil || o.SupportedFormatTypes == nil {
		return nil, false
	}
	return o.SupportedFormatTypes, true
}

// HasSupportedFormatTypes returns a boolean if a field has been set.
func (o *Endpoint) HasSupportedFormatTypes() bool {
	if o != nil && o.SupportedFormatTypes != nil {
		return true
	}

	return false
}

// SetSupportedFormatTypes gets a reference to the given string and assigns it to the SupportedFormatTypes field.
func (o *Endpoint) SetSupportedFormatTypes(v string) {
	o.SupportedFormatTypes = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *Endpoint) GetConfig() EndpointConfig {
	if o == nil || o.Config == nil {
		var ret EndpointConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetConfigOk() (*EndpointConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *Endpoint) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given EndpointConfig and assigns it to the Config field.
func (o *Endpoint) SetConfig(v EndpointConfig) {
	o.Config = &v
}

func (o Endpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EnvironmentId != nil {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if o.EndpointTypeId != nil {
		toSerialize["endpointTypeId"] = o.EndpointTypeId
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.EndpointRole != nil {
		toSerialize["endpointRole"] = o.EndpointRole
	}
	if o.EndpointType != nil {
		toSerialize["endpointType"] = o.EndpointType
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.SupportedFormatTypes != nil {
		toSerialize["supportedFormatTypes"] = o.SupportedFormatTypes
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableEndpoint struct {
	value *Endpoint
	isSet bool
}

func (v NullableEndpoint) Get() *Endpoint {
	return v.value
}

func (v *NullableEndpoint) Set(val *Endpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpoint(val *Endpoint) *NullableEndpoint {
	return &NullableEndpoint{value: val, isSet: true}
}

func (v NullableEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


