/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// Partner Partner Type
type Partner struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	WebsiteUrl *string `json:"websiteUrl,omitempty"`
	Status *TimedStatus `json:"status,omitempty"`
	EnvironmentId string `json:"environmentId"`
	HostFlag bool `json:"hostFlag"`
}

// NewPartner instantiates a new Partner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartner(id string, name string, environmentId string, hostFlag bool) *Partner {
	this := Partner{}
	this.Id = id
	this.Name = name
	this.EnvironmentId = environmentId
	this.HostFlag = hostFlag
	return &this
}

// NewPartnerWithDefaults instantiates a new Partner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerWithDefaults() *Partner {
	this := Partner{}
	var hostFlag bool = false
	this.HostFlag = hostFlag
	return &this
}

// GetId returns the Id field value
func (o *Partner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Partner) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Partner) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Partner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Partner) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Partner) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Partner) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Partner) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Partner) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Partner) SetDescription(v string) {
	o.Description = &v
}

// GetWebsiteUrl returns the WebsiteUrl field value if set, zero value otherwise.
func (o *Partner) GetWebsiteUrl() string {
	if o == nil || o.WebsiteUrl == nil {
		var ret string
		return ret
	}
	return *o.WebsiteUrl
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Partner) GetWebsiteUrlOk() (*string, bool) {
	if o == nil || o.WebsiteUrl == nil {
		return nil, false
	}
	return o.WebsiteUrl, true
}

// HasWebsiteUrl returns a boolean if a field has been set.
func (o *Partner) HasWebsiteUrl() bool {
	if o != nil && o.WebsiteUrl != nil {
		return true
	}

	return false
}

// SetWebsiteUrl gets a reference to the given string and assigns it to the WebsiteUrl field.
func (o *Partner) SetWebsiteUrl(v string) {
	o.WebsiteUrl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Partner) GetStatus() TimedStatus {
	if o == nil || o.Status == nil {
		var ret TimedStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Partner) GetStatusOk() (*TimedStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Partner) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given TimedStatus and assigns it to the Status field.
func (o *Partner) SetStatus(v TimedStatus) {
	o.Status = &v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *Partner) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *Partner) GetEnvironmentIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *Partner) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetHostFlag returns the HostFlag field value
func (o *Partner) GetHostFlag() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HostFlag
}

// GetHostFlagOk returns a tuple with the HostFlag field value
// and a boolean to check if the value has been set.
func (o *Partner) GetHostFlagOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HostFlag, true
}

// SetHostFlag sets field value
func (o *Partner) SetHostFlag(v bool) {
	o.HostFlag = v
}

func (o Partner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.WebsiteUrl != nil {
		toSerialize["websiteUrl"] = o.WebsiteUrl
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if true {
		toSerialize["hostFlag"] = o.HostFlag
	}
	return json.Marshal(toSerialize)
}

type NullablePartner struct {
	value *Partner
	isSet bool
}

func (v NullablePartner) Get() *Partner {
	return v.value
}

func (v *NullablePartner) Set(val *Partner) {
	v.value = val
	v.isSet = true
}

func (v NullablePartner) IsSet() bool {
	return v.isSet
}

func (v *NullablePartner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartner(val *Partner) *NullablePartner {
	return &NullablePartner{value: val, isSet: true}
}

func (v NullablePartner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


