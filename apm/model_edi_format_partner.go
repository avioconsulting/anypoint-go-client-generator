/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// EdiFormatPartner struct for EdiFormatPartner
type EdiFormatPartner struct {
	Id *string `json:"id,omitempty"`
	ConfigType string `json:"configType"`
	FormatType *string `json:"formatType,omitempty"`
	FormatTypeId string `json:"formatTypeId"`
	PartnerId NullableString `json:"partnerId"`
}

// NewEdiFormatPartner instantiates a new EdiFormatPartner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdiFormatPartner(configType string, formatTypeId string, partnerId NullableString) *EdiFormatPartner {
	this := EdiFormatPartner{}
	this.ConfigType = configType
	this.FormatTypeId = formatTypeId
	this.PartnerId = partnerId
	return &this
}

// NewEdiFormatPartnerWithDefaults instantiates a new EdiFormatPartner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdiFormatPartnerWithDefaults() *EdiFormatPartner {
	this := EdiFormatPartner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EdiFormatPartner) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatPartner) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EdiFormatPartner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EdiFormatPartner) SetId(v string) {
	o.Id = &v
}

// GetConfigType returns the ConfigType field value
func (o *EdiFormatPartner) GetConfigType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigType
}

// GetConfigTypeOk returns a tuple with the ConfigType field value
// and a boolean to check if the value has been set.
func (o *EdiFormatPartner) GetConfigTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfigType, true
}

// SetConfigType sets field value
func (o *EdiFormatPartner) SetConfigType(v string) {
	o.ConfigType = v
}

// GetFormatType returns the FormatType field value if set, zero value otherwise.
func (o *EdiFormatPartner) GetFormatType() string {
	if o == nil || o.FormatType == nil {
		var ret string
		return ret
	}
	return *o.FormatType
}

// GetFormatTypeOk returns a tuple with the FormatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatPartner) GetFormatTypeOk() (*string, bool) {
	if o == nil || o.FormatType == nil {
		return nil, false
	}
	return o.FormatType, true
}

// HasFormatType returns a boolean if a field has been set.
func (o *EdiFormatPartner) HasFormatType() bool {
	if o != nil && o.FormatType != nil {
		return true
	}

	return false
}

// SetFormatType gets a reference to the given string and assigns it to the FormatType field.
func (o *EdiFormatPartner) SetFormatType(v string) {
	o.FormatType = &v
}

// GetFormatTypeId returns the FormatTypeId field value
func (o *EdiFormatPartner) GetFormatTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FormatTypeId
}

// GetFormatTypeIdOk returns a tuple with the FormatTypeId field value
// and a boolean to check if the value has been set.
func (o *EdiFormatPartner) GetFormatTypeIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FormatTypeId, true
}

// SetFormatTypeId sets field value
func (o *EdiFormatPartner) SetFormatTypeId(v string) {
	o.FormatTypeId = v
}

// GetPartnerId returns the PartnerId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *EdiFormatPartner) GetPartnerId() string {
	if o == nil || o.PartnerId.Get() == nil {
		var ret string
		return ret
	}

	return *o.PartnerId.Get()
}

// GetPartnerIdOk returns a tuple with the PartnerId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EdiFormatPartner) GetPartnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerId.Get(), o.PartnerId.IsSet()
}

// SetPartnerId sets field value
func (o *EdiFormatPartner) SetPartnerId(v string) {
	o.PartnerId.Set(&v)
}

func (o EdiFormatPartner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["configType"] = o.ConfigType
	}
	if o.FormatType != nil {
		toSerialize["formatType"] = o.FormatType
	}
	if true {
		toSerialize["formatTypeId"] = o.FormatTypeId
	}
	if true {
		toSerialize["partnerId"] = o.PartnerId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEdiFormatPartner struct {
	value *EdiFormatPartner
	isSet bool
}

func (v NullableEdiFormatPartner) Get() *EdiFormatPartner {
	return v.value
}

func (v *NullableEdiFormatPartner) Set(val *EdiFormatPartner) {
	v.value = val
	v.isSet = true
}

func (v NullableEdiFormatPartner) IsSet() bool {
	return v.isSet
}

func (v *NullableEdiFormatPartner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdiFormatPartner(val *EdiFormatPartner) *NullableEdiFormatPartner {
	return &NullableEdiFormatPartner{value: val, isSet: true}
}

func (v NullableEdiFormatPartner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdiFormatPartner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


