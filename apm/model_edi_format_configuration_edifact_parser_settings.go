/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// EdiFormatConfigurationEdifactParserSettings struct for EdiFormatConfigurationEdifactParserSettings
type EdiFormatConfigurationEdifactParserSettings struct {
	EnforceLengthLimits *bool `json:"enforceLengthLimits,omitempty"`
	EnforceValueRepeats *bool `json:"enforceValueRepeats,omitempty"`
	EnforceReadCharacters *bool `json:"enforceReadCharacters,omitempty"`
	AllowUnknownSegments *bool `json:"allowUnknownSegments,omitempty"`
	EnforceSegmentOrder *bool `json:"enforceSegmentOrder,omitempty"`
	AllowUnusedSegments *bool `json:"allowUnusedSegments,omitempty"`
	EnforceSegmentRepeats *bool `json:"enforceSegmentRepeats,omitempty"`
	EnforceCodeSetValidationsParse *bool `json:"enforceCodeSetValidationsParse,omitempty"`
	CharacterEncodingOverride *string `json:"characterEncodingOverride,omitempty"`
}

// NewEdiFormatConfigurationEdifactParserSettings instantiates a new EdiFormatConfigurationEdifactParserSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdiFormatConfigurationEdifactParserSettings() *EdiFormatConfigurationEdifactParserSettings {
	this := EdiFormatConfigurationEdifactParserSettings{}
	return &this
}

// NewEdiFormatConfigurationEdifactParserSettingsWithDefaults instantiates a new EdiFormatConfigurationEdifactParserSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdiFormatConfigurationEdifactParserSettingsWithDefaults() *EdiFormatConfigurationEdifactParserSettings {
	this := EdiFormatConfigurationEdifactParserSettings{}
	return &this
}

// GetEnforceLengthLimits returns the EnforceLengthLimits field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceLengthLimits() bool {
	if o == nil || o.EnforceLengthLimits == nil {
		var ret bool
		return ret
	}
	return *o.EnforceLengthLimits
}

// GetEnforceLengthLimitsOk returns a tuple with the EnforceLengthLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceLengthLimitsOk() (*bool, bool) {
	if o == nil || o.EnforceLengthLimits == nil {
		return nil, false
	}
	return o.EnforceLengthLimits, true
}

// HasEnforceLengthLimits returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasEnforceLengthLimits() bool {
	if o != nil && o.EnforceLengthLimits != nil {
		return true
	}

	return false
}

// SetEnforceLengthLimits gets a reference to the given bool and assigns it to the EnforceLengthLimits field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetEnforceLengthLimits(v bool) {
	o.EnforceLengthLimits = &v
}

// GetEnforceValueRepeats returns the EnforceValueRepeats field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceValueRepeats() bool {
	if o == nil || o.EnforceValueRepeats == nil {
		var ret bool
		return ret
	}
	return *o.EnforceValueRepeats
}

// GetEnforceValueRepeatsOk returns a tuple with the EnforceValueRepeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceValueRepeatsOk() (*bool, bool) {
	if o == nil || o.EnforceValueRepeats == nil {
		return nil, false
	}
	return o.EnforceValueRepeats, true
}

// HasEnforceValueRepeats returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasEnforceValueRepeats() bool {
	if o != nil && o.EnforceValueRepeats != nil {
		return true
	}

	return false
}

// SetEnforceValueRepeats gets a reference to the given bool and assigns it to the EnforceValueRepeats field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetEnforceValueRepeats(v bool) {
	o.EnforceValueRepeats = &v
}

// GetEnforceReadCharacters returns the EnforceReadCharacters field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceReadCharacters() bool {
	if o == nil || o.EnforceReadCharacters == nil {
		var ret bool
		return ret
	}
	return *o.EnforceReadCharacters
}

// GetEnforceReadCharactersOk returns a tuple with the EnforceReadCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceReadCharactersOk() (*bool, bool) {
	if o == nil || o.EnforceReadCharacters == nil {
		return nil, false
	}
	return o.EnforceReadCharacters, true
}

// HasEnforceReadCharacters returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasEnforceReadCharacters() bool {
	if o != nil && o.EnforceReadCharacters != nil {
		return true
	}

	return false
}

// SetEnforceReadCharacters gets a reference to the given bool and assigns it to the EnforceReadCharacters field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetEnforceReadCharacters(v bool) {
	o.EnforceReadCharacters = &v
}

// GetAllowUnknownSegments returns the AllowUnknownSegments field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetAllowUnknownSegments() bool {
	if o == nil || o.AllowUnknownSegments == nil {
		var ret bool
		return ret
	}
	return *o.AllowUnknownSegments
}

// GetAllowUnknownSegmentsOk returns a tuple with the AllowUnknownSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetAllowUnknownSegmentsOk() (*bool, bool) {
	if o == nil || o.AllowUnknownSegments == nil {
		return nil, false
	}
	return o.AllowUnknownSegments, true
}

// HasAllowUnknownSegments returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasAllowUnknownSegments() bool {
	if o != nil && o.AllowUnknownSegments != nil {
		return true
	}

	return false
}

// SetAllowUnknownSegments gets a reference to the given bool and assigns it to the AllowUnknownSegments field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetAllowUnknownSegments(v bool) {
	o.AllowUnknownSegments = &v
}

// GetEnforceSegmentOrder returns the EnforceSegmentOrder field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceSegmentOrder() bool {
	if o == nil || o.EnforceSegmentOrder == nil {
		var ret bool
		return ret
	}
	return *o.EnforceSegmentOrder
}

// GetEnforceSegmentOrderOk returns a tuple with the EnforceSegmentOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceSegmentOrderOk() (*bool, bool) {
	if o == nil || o.EnforceSegmentOrder == nil {
		return nil, false
	}
	return o.EnforceSegmentOrder, true
}

// HasEnforceSegmentOrder returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasEnforceSegmentOrder() bool {
	if o != nil && o.EnforceSegmentOrder != nil {
		return true
	}

	return false
}

// SetEnforceSegmentOrder gets a reference to the given bool and assigns it to the EnforceSegmentOrder field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetEnforceSegmentOrder(v bool) {
	o.EnforceSegmentOrder = &v
}

// GetAllowUnusedSegments returns the AllowUnusedSegments field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetAllowUnusedSegments() bool {
	if o == nil || o.AllowUnusedSegments == nil {
		var ret bool
		return ret
	}
	return *o.AllowUnusedSegments
}

// GetAllowUnusedSegmentsOk returns a tuple with the AllowUnusedSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetAllowUnusedSegmentsOk() (*bool, bool) {
	if o == nil || o.AllowUnusedSegments == nil {
		return nil, false
	}
	return o.AllowUnusedSegments, true
}

// HasAllowUnusedSegments returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasAllowUnusedSegments() bool {
	if o != nil && o.AllowUnusedSegments != nil {
		return true
	}

	return false
}

// SetAllowUnusedSegments gets a reference to the given bool and assigns it to the AllowUnusedSegments field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetAllowUnusedSegments(v bool) {
	o.AllowUnusedSegments = &v
}

// GetEnforceSegmentRepeats returns the EnforceSegmentRepeats field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceSegmentRepeats() bool {
	if o == nil || o.EnforceSegmentRepeats == nil {
		var ret bool
		return ret
	}
	return *o.EnforceSegmentRepeats
}

// GetEnforceSegmentRepeatsOk returns a tuple with the EnforceSegmentRepeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceSegmentRepeatsOk() (*bool, bool) {
	if o == nil || o.EnforceSegmentRepeats == nil {
		return nil, false
	}
	return o.EnforceSegmentRepeats, true
}

// HasEnforceSegmentRepeats returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasEnforceSegmentRepeats() bool {
	if o != nil && o.EnforceSegmentRepeats != nil {
		return true
	}

	return false
}

// SetEnforceSegmentRepeats gets a reference to the given bool and assigns it to the EnforceSegmentRepeats field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetEnforceSegmentRepeats(v bool) {
	o.EnforceSegmentRepeats = &v
}

// GetEnforceCodeSetValidationsParse returns the EnforceCodeSetValidationsParse field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceCodeSetValidationsParse() bool {
	if o == nil || o.EnforceCodeSetValidationsParse == nil {
		var ret bool
		return ret
	}
	return *o.EnforceCodeSetValidationsParse
}

// GetEnforceCodeSetValidationsParseOk returns a tuple with the EnforceCodeSetValidationsParse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetEnforceCodeSetValidationsParseOk() (*bool, bool) {
	if o == nil || o.EnforceCodeSetValidationsParse == nil {
		return nil, false
	}
	return o.EnforceCodeSetValidationsParse, true
}

// HasEnforceCodeSetValidationsParse returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasEnforceCodeSetValidationsParse() bool {
	if o != nil && o.EnforceCodeSetValidationsParse != nil {
		return true
	}

	return false
}

// SetEnforceCodeSetValidationsParse gets a reference to the given bool and assigns it to the EnforceCodeSetValidationsParse field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetEnforceCodeSetValidationsParse(v bool) {
	o.EnforceCodeSetValidationsParse = &v
}

// GetCharacterEncodingOverride returns the CharacterEncodingOverride field value if set, zero value otherwise.
func (o *EdiFormatConfigurationEdifactParserSettings) GetCharacterEncodingOverride() string {
	if o == nil || o.CharacterEncodingOverride == nil {
		var ret string
		return ret
	}
	return *o.CharacterEncodingOverride
}

// GetCharacterEncodingOverrideOk returns a tuple with the CharacterEncodingOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) GetCharacterEncodingOverrideOk() (*string, bool) {
	if o == nil || o.CharacterEncodingOverride == nil {
		return nil, false
	}
	return o.CharacterEncodingOverride, true
}

// HasCharacterEncodingOverride returns a boolean if a field has been set.
func (o *EdiFormatConfigurationEdifactParserSettings) HasCharacterEncodingOverride() bool {
	if o != nil && o.CharacterEncodingOverride != nil {
		return true
	}

	return false
}

// SetCharacterEncodingOverride gets a reference to the given string and assigns it to the CharacterEncodingOverride field.
func (o *EdiFormatConfigurationEdifactParserSettings) SetCharacterEncodingOverride(v string) {
	o.CharacterEncodingOverride = &v
}

func (o EdiFormatConfigurationEdifactParserSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnforceLengthLimits != nil {
		toSerialize["enforceLengthLimits"] = o.EnforceLengthLimits
	}
	if o.EnforceValueRepeats != nil {
		toSerialize["enforceValueRepeats"] = o.EnforceValueRepeats
	}
	if o.EnforceReadCharacters != nil {
		toSerialize["enforceReadCharacters"] = o.EnforceReadCharacters
	}
	if o.AllowUnknownSegments != nil {
		toSerialize["allowUnknownSegments"] = o.AllowUnknownSegments
	}
	if o.EnforceSegmentOrder != nil {
		toSerialize["enforceSegmentOrder"] = o.EnforceSegmentOrder
	}
	if o.AllowUnusedSegments != nil {
		toSerialize["allowUnusedSegments"] = o.AllowUnusedSegments
	}
	if o.EnforceSegmentRepeats != nil {
		toSerialize["enforceSegmentRepeats"] = o.EnforceSegmentRepeats
	}
	if o.EnforceCodeSetValidationsParse != nil {
		toSerialize["enforceCodeSetValidationsParse"] = o.EnforceCodeSetValidationsParse
	}
	if o.CharacterEncodingOverride != nil {
		toSerialize["characterEncodingOverride"] = o.CharacterEncodingOverride
	}
	return json.Marshal(toSerialize)
}

type NullableEdiFormatConfigurationEdifactParserSettings struct {
	value *EdiFormatConfigurationEdifactParserSettings
	isSet bool
}

func (v NullableEdiFormatConfigurationEdifactParserSettings) Get() *EdiFormatConfigurationEdifactParserSettings {
	return v.value
}

func (v *NullableEdiFormatConfigurationEdifactParserSettings) Set(val *EdiFormatConfigurationEdifactParserSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableEdiFormatConfigurationEdifactParserSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableEdiFormatConfigurationEdifactParserSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdiFormatConfigurationEdifactParserSettings(val *EdiFormatConfigurationEdifactParserSettings) *NullableEdiFormatConfigurationEdifactParserSettings {
	return &NullableEdiFormatConfigurationEdifactParserSettings{value: val, isSet: true}
}

func (v NullableEdiFormatConfigurationEdifactParserSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdiFormatConfigurationEdifactParserSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


