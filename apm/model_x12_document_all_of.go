/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// X12DocumentAllOf struct for X12DocumentAllOf
type X12DocumentAllOf struct {
	X12Version *string `json:"x12Version,omitempty"`
	TransactionSet *string `json:"transactionSet,omitempty"`
}

// NewX12DocumentAllOf instantiates a new X12DocumentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewX12DocumentAllOf() *X12DocumentAllOf {
	this := X12DocumentAllOf{}
	return &this
}

// NewX12DocumentAllOfWithDefaults instantiates a new X12DocumentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewX12DocumentAllOfWithDefaults() *X12DocumentAllOf {
	this := X12DocumentAllOf{}
	return &this
}

// GetX12Version returns the X12Version field value if set, zero value otherwise.
func (o *X12DocumentAllOf) GetX12Version() string {
	if o == nil || o.X12Version == nil {
		var ret string
		return ret
	}
	return *o.X12Version
}

// GetX12VersionOk returns a tuple with the X12Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *X12DocumentAllOf) GetX12VersionOk() (*string, bool) {
	if o == nil || o.X12Version == nil {
		return nil, false
	}
	return o.X12Version, true
}

// HasX12Version returns a boolean if a field has been set.
func (o *X12DocumentAllOf) HasX12Version() bool {
	if o != nil && o.X12Version != nil {
		return true
	}

	return false
}

// SetX12Version gets a reference to the given string and assigns it to the X12Version field.
func (o *X12DocumentAllOf) SetX12Version(v string) {
	o.X12Version = &v
}

// GetTransactionSet returns the TransactionSet field value if set, zero value otherwise.
func (o *X12DocumentAllOf) GetTransactionSet() string {
	if o == nil || o.TransactionSet == nil {
		var ret string
		return ret
	}
	return *o.TransactionSet
}

// GetTransactionSetOk returns a tuple with the TransactionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *X12DocumentAllOf) GetTransactionSetOk() (*string, bool) {
	if o == nil || o.TransactionSet == nil {
		return nil, false
	}
	return o.TransactionSet, true
}

// HasTransactionSet returns a boolean if a field has been set.
func (o *X12DocumentAllOf) HasTransactionSet() bool {
	if o != nil && o.TransactionSet != nil {
		return true
	}

	return false
}

// SetTransactionSet gets a reference to the given string and assigns it to the TransactionSet field.
func (o *X12DocumentAllOf) SetTransactionSet(v string) {
	o.TransactionSet = &v
}

func (o X12DocumentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.X12Version != nil {
		toSerialize["x12Version"] = o.X12Version
	}
	if o.TransactionSet != nil {
		toSerialize["transactionSet"] = o.TransactionSet
	}
	return json.Marshal(toSerialize)
}

type NullableX12DocumentAllOf struct {
	value *X12DocumentAllOf
	isSet bool
}

func (v NullableX12DocumentAllOf) Get() *X12DocumentAllOf {
	return v.value
}

func (v *NullableX12DocumentAllOf) Set(val *X12DocumentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableX12DocumentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableX12DocumentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableX12DocumentAllOf(val *X12DocumentAllOf) *NullableX12DocumentAllOf {
	return &NullableX12DocumentAllOf{value: val, isSet: true}
}

func (v NullableX12DocumentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableX12DocumentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


