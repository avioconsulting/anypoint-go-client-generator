/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
	"time"
)

// DocumentFlow struct for DocumentFlow
type DocumentFlow struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Direction *string `json:"direction,omitempty"`
	PartnerFromId *string `json:"partnerFromId,omitempty"`
	PartnerToId *string `json:"partnerToId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	ModifierAt *time.Time `json:"modifierAt,omitempty"`
	ModifiedBy *string `json:"modifiedBy,omitempty"`
	Configurations *[]DocumentFlowConfig `json:"configurations,omitempty"`
}

// NewDocumentFlow instantiates a new DocumentFlow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentFlow() *DocumentFlow {
	this := DocumentFlow{}
	return &this
}

// NewDocumentFlowWithDefaults instantiates a new DocumentFlow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentFlowWithDefaults() *DocumentFlow {
	this := DocumentFlow{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DocumentFlow) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DocumentFlow) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DocumentFlow) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DocumentFlow) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DocumentFlow) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DocumentFlow) SetName(v string) {
	o.Name = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *DocumentFlow) GetDirection() string {
	if o == nil || o.Direction == nil {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetDirectionOk() (*string, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *DocumentFlow) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *DocumentFlow) SetDirection(v string) {
	o.Direction = &v
}

// GetPartnerFromId returns the PartnerFromId field value if set, zero value otherwise.
func (o *DocumentFlow) GetPartnerFromId() string {
	if o == nil || o.PartnerFromId == nil {
		var ret string
		return ret
	}
	return *o.PartnerFromId
}

// GetPartnerFromIdOk returns a tuple with the PartnerFromId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetPartnerFromIdOk() (*string, bool) {
	if o == nil || o.PartnerFromId == nil {
		return nil, false
	}
	return o.PartnerFromId, true
}

// HasPartnerFromId returns a boolean if a field has been set.
func (o *DocumentFlow) HasPartnerFromId() bool {
	if o != nil && o.PartnerFromId != nil {
		return true
	}

	return false
}

// SetPartnerFromId gets a reference to the given string and assigns it to the PartnerFromId field.
func (o *DocumentFlow) SetPartnerFromId(v string) {
	o.PartnerFromId = &v
}

// GetPartnerToId returns the PartnerToId field value if set, zero value otherwise.
func (o *DocumentFlow) GetPartnerToId() string {
	if o == nil || o.PartnerToId == nil {
		var ret string
		return ret
	}
	return *o.PartnerToId
}

// GetPartnerToIdOk returns a tuple with the PartnerToId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetPartnerToIdOk() (*string, bool) {
	if o == nil || o.PartnerToId == nil {
		return nil, false
	}
	return o.PartnerToId, true
}

// HasPartnerToId returns a boolean if a field has been set.
func (o *DocumentFlow) HasPartnerToId() bool {
	if o != nil && o.PartnerToId != nil {
		return true
	}

	return false
}

// SetPartnerToId gets a reference to the given string and assigns it to the PartnerToId field.
func (o *DocumentFlow) SetPartnerToId(v string) {
	o.PartnerToId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DocumentFlow) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DocumentFlow) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *DocumentFlow) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *DocumentFlow) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *DocumentFlow) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *DocumentFlow) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetModifierAt returns the ModifierAt field value if set, zero value otherwise.
func (o *DocumentFlow) GetModifierAt() time.Time {
	if o == nil || o.ModifierAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifierAt
}

// GetModifierAtOk returns a tuple with the ModifierAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetModifierAtOk() (*time.Time, bool) {
	if o == nil || o.ModifierAt == nil {
		return nil, false
	}
	return o.ModifierAt, true
}

// HasModifierAt returns a boolean if a field has been set.
func (o *DocumentFlow) HasModifierAt() bool {
	if o != nil && o.ModifierAt != nil {
		return true
	}

	return false
}

// SetModifierAt gets a reference to the given time.Time and assigns it to the ModifierAt field.
func (o *DocumentFlow) SetModifierAt(v time.Time) {
	o.ModifierAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *DocumentFlow) GetModifiedBy() string {
	if o == nil || o.ModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetModifiedByOk() (*string, bool) {
	if o == nil || o.ModifiedBy == nil {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *DocumentFlow) HasModifiedBy() bool {
	if o != nil && o.ModifiedBy != nil {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *DocumentFlow) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *DocumentFlow) GetConfigurations() []DocumentFlowConfig {
	if o == nil || o.Configurations == nil {
		var ret []DocumentFlowConfig
		return ret
	}
	return *o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFlow) GetConfigurationsOk() (*[]DocumentFlowConfig, bool) {
	if o == nil || o.Configurations == nil {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *DocumentFlow) HasConfigurations() bool {
	if o != nil && o.Configurations != nil {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given []DocumentFlowConfig and assigns it to the Configurations field.
func (o *DocumentFlow) SetConfigurations(v []DocumentFlowConfig) {
	o.Configurations = &v
}

func (o DocumentFlow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.PartnerFromId != nil {
		toSerialize["partnerFromId"] = o.PartnerFromId
	}
	if o.PartnerToId != nil {
		toSerialize["partnerToId"] = o.PartnerToId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.ModifierAt != nil {
		toSerialize["modifierAt"] = o.ModifierAt
	}
	if o.ModifiedBy != nil {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if o.Configurations != nil {
		toSerialize["configurations"] = o.Configurations
	}
	return json.Marshal(toSerialize)
}

type NullableDocumentFlow struct {
	value *DocumentFlow
	isSet bool
}

func (v NullableDocumentFlow) Get() *DocumentFlow {
	return v.value
}

func (v *NullableDocumentFlow) Set(val *DocumentFlow) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentFlow) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentFlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentFlow(val *DocumentFlow) *NullableDocumentFlow {
	return &NullableDocumentFlow{value: val, isSet: true}
}

func (v NullableDocumentFlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentFlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


