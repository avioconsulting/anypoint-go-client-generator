/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// Partnerprofileidentifier Partner Profile Identifier Type
type Partnerprofileidentifier struct {
	Value string `json:"value"`
	IdentifierTypeQualifierId string `json:"identifierTypeQualifierId"`
	Status string `json:"status"`
}

// NewPartnerprofileidentifier instantiates a new Partnerprofileidentifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerprofileidentifier(value string, identifierTypeQualifierId string, status string) *Partnerprofileidentifier {
	this := Partnerprofileidentifier{}
	this.Value = value
	this.IdentifierTypeQualifierId = identifierTypeQualifierId
	this.Status = status
	return &this
}

// NewPartnerprofileidentifierWithDefaults instantiates a new Partnerprofileidentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerprofileidentifierWithDefaults() *Partnerprofileidentifier {
	this := Partnerprofileidentifier{}
	return &this
}

// GetValue returns the Value field value
func (o *Partnerprofileidentifier) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *Partnerprofileidentifier) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *Partnerprofileidentifier) SetValue(v string) {
	o.Value = v
}

// GetIdentifierTypeQualifierId returns the IdentifierTypeQualifierId field value
func (o *Partnerprofileidentifier) GetIdentifierTypeQualifierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentifierTypeQualifierId
}

// GetIdentifierTypeQualifierIdOk returns a tuple with the IdentifierTypeQualifierId field value
// and a boolean to check if the value has been set.
func (o *Partnerprofileidentifier) GetIdentifierTypeQualifierIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IdentifierTypeQualifierId, true
}

// SetIdentifierTypeQualifierId sets field value
func (o *Partnerprofileidentifier) SetIdentifierTypeQualifierId(v string) {
	o.IdentifierTypeQualifierId = v
}

// GetStatus returns the Status field value
func (o *Partnerprofileidentifier) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Partnerprofileidentifier) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Partnerprofileidentifier) SetStatus(v string) {
	o.Status = v
}

func (o Partnerprofileidentifier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["identifierTypeQualifierId"] = o.IdentifierTypeQualifierId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullablePartnerprofileidentifier struct {
	value *Partnerprofileidentifier
	isSet bool
}

func (v NullablePartnerprofileidentifier) Get() *Partnerprofileidentifier {
	return v.value
}

func (v *NullablePartnerprofileidentifier) Set(val *Partnerprofileidentifier) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerprofileidentifier) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerprofileidentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerprofileidentifier(val *Partnerprofileidentifier) *NullablePartnerprofileidentifier {
	return &NullablePartnerprofileidentifier{value: val, isSet: true}
}

func (v NullablePartnerprofileidentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerprofileidentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


