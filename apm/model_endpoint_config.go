/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// EndpointConfig struct for EndpointConfig
type EndpointConfig struct {
	ConfigName *string `json:"configName,omitempty"`
	ServerAddress *string `json:"serverAddress,omitempty"`
	ServerPort *int32 `json:"serverPort,omitempty"`
	AuthMode *AuthModeConfig `json:"authMode,omitempty"`
	Path *string `json:"path,omitempty"`
	MovedPath *string `json:"movedPath,omitempty"`
	PollingFrequency *int32 `json:"pollingFrequency,omitempty"`
	SizeCheckWaitTime *int32 `json:"sizeCheckWaitTime,omitempty"`
	ResponseTimeout *int32 `json:"responseTimeout,omitempty"`
	ConnectionIdleTimeout *int32 `json:"connectionIdleTimeout,omitempty"`
	ManageWithApiManager *bool `json:"manageWithApiManager,omitempty"`
	AutoDiscoveryId *string `json:"autoDiscoveryId,omitempty"`
	CredentialType *string `json:"credentialType,omitempty"`
	Usage *string `json:"usage,omitempty"`
	AssociatedMessageTypeId *string `json:"associatedMessageTypeId,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	ValidWithoutPartner *bool `json:"validWithoutPartner,omitempty"`
	AssociatedReferenceIdentifierId *string `json:"associatedReferenceIdentifierId,omitempty"`
	FileNamePattern *string `json:"fileNamePattern,omitempty"`
	TlsContext *TLSContext `json:"tlsContext,omitempty"`
	Vpc *EndpointConfigVpc `json:"vpc,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EndpointConfig EndpointConfig

// NewEndpointConfig instantiates a new EndpointConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointConfig() *EndpointConfig {
	this := EndpointConfig{}
	return &this
}

// NewEndpointConfigWithDefaults instantiates a new EndpointConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointConfigWithDefaults() *EndpointConfig {
	this := EndpointConfig{}
	return &this
}

// GetConfigName returns the ConfigName field value if set, zero value otherwise.
func (o *EndpointConfig) GetConfigName() string {
	if o == nil || o.ConfigName == nil {
		var ret string
		return ret
	}
	return *o.ConfigName
}

// GetConfigNameOk returns a tuple with the ConfigName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetConfigNameOk() (*string, bool) {
	if o == nil || o.ConfigName == nil {
		return nil, false
	}
	return o.ConfigName, true
}

// HasConfigName returns a boolean if a field has been set.
func (o *EndpointConfig) HasConfigName() bool {
	if o != nil && o.ConfigName != nil {
		return true
	}

	return false
}

// SetConfigName gets a reference to the given string and assigns it to the ConfigName field.
func (o *EndpointConfig) SetConfigName(v string) {
	o.ConfigName = &v
}

// GetServerAddress returns the ServerAddress field value if set, zero value otherwise.
func (o *EndpointConfig) GetServerAddress() string {
	if o == nil || o.ServerAddress == nil {
		var ret string
		return ret
	}
	return *o.ServerAddress
}

// GetServerAddressOk returns a tuple with the ServerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetServerAddressOk() (*string, bool) {
	if o == nil || o.ServerAddress == nil {
		return nil, false
	}
	return o.ServerAddress, true
}

// HasServerAddress returns a boolean if a field has been set.
func (o *EndpointConfig) HasServerAddress() bool {
	if o != nil && o.ServerAddress != nil {
		return true
	}

	return false
}

// SetServerAddress gets a reference to the given string and assigns it to the ServerAddress field.
func (o *EndpointConfig) SetServerAddress(v string) {
	o.ServerAddress = &v
}

// GetServerPort returns the ServerPort field value if set, zero value otherwise.
func (o *EndpointConfig) GetServerPort() int32 {
	if o == nil || o.ServerPort == nil {
		var ret int32
		return ret
	}
	return *o.ServerPort
}

// GetServerPortOk returns a tuple with the ServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetServerPortOk() (*int32, bool) {
	if o == nil || o.ServerPort == nil {
		return nil, false
	}
	return o.ServerPort, true
}

// HasServerPort returns a boolean if a field has been set.
func (o *EndpointConfig) HasServerPort() bool {
	if o != nil && o.ServerPort != nil {
		return true
	}

	return false
}

// SetServerPort gets a reference to the given int32 and assigns it to the ServerPort field.
func (o *EndpointConfig) SetServerPort(v int32) {
	o.ServerPort = &v
}

// GetAuthMode returns the AuthMode field value if set, zero value otherwise.
func (o *EndpointConfig) GetAuthMode() AuthModeConfig {
	if o == nil || o.AuthMode == nil {
		var ret AuthModeConfig
		return ret
	}
	return *o.AuthMode
}

// GetAuthModeOk returns a tuple with the AuthMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetAuthModeOk() (*AuthModeConfig, bool) {
	if o == nil || o.AuthMode == nil {
		return nil, false
	}
	return o.AuthMode, true
}

// HasAuthMode returns a boolean if a field has been set.
func (o *EndpointConfig) HasAuthMode() bool {
	if o != nil && o.AuthMode != nil {
		return true
	}

	return false
}

// SetAuthMode gets a reference to the given AuthModeConfig and assigns it to the AuthMode field.
func (o *EndpointConfig) SetAuthMode(v AuthModeConfig) {
	o.AuthMode = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *EndpointConfig) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *EndpointConfig) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *EndpointConfig) SetPath(v string) {
	o.Path = &v
}

// GetMovedPath returns the MovedPath field value if set, zero value otherwise.
func (o *EndpointConfig) GetMovedPath() string {
	if o == nil || o.MovedPath == nil {
		var ret string
		return ret
	}
	return *o.MovedPath
}

// GetMovedPathOk returns a tuple with the MovedPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetMovedPathOk() (*string, bool) {
	if o == nil || o.MovedPath == nil {
		return nil, false
	}
	return o.MovedPath, true
}

// HasMovedPath returns a boolean if a field has been set.
func (o *EndpointConfig) HasMovedPath() bool {
	if o != nil && o.MovedPath != nil {
		return true
	}

	return false
}

// SetMovedPath gets a reference to the given string and assigns it to the MovedPath field.
func (o *EndpointConfig) SetMovedPath(v string) {
	o.MovedPath = &v
}

// GetPollingFrequency returns the PollingFrequency field value if set, zero value otherwise.
func (o *EndpointConfig) GetPollingFrequency() int32 {
	if o == nil || o.PollingFrequency == nil {
		var ret int32
		return ret
	}
	return *o.PollingFrequency
}

// GetPollingFrequencyOk returns a tuple with the PollingFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetPollingFrequencyOk() (*int32, bool) {
	if o == nil || o.PollingFrequency == nil {
		return nil, false
	}
	return o.PollingFrequency, true
}

// HasPollingFrequency returns a boolean if a field has been set.
func (o *EndpointConfig) HasPollingFrequency() bool {
	if o != nil && o.PollingFrequency != nil {
		return true
	}

	return false
}

// SetPollingFrequency gets a reference to the given int32 and assigns it to the PollingFrequency field.
func (o *EndpointConfig) SetPollingFrequency(v int32) {
	o.PollingFrequency = &v
}

// GetSizeCheckWaitTime returns the SizeCheckWaitTime field value if set, zero value otherwise.
func (o *EndpointConfig) GetSizeCheckWaitTime() int32 {
	if o == nil || o.SizeCheckWaitTime == nil {
		var ret int32
		return ret
	}
	return *o.SizeCheckWaitTime
}

// GetSizeCheckWaitTimeOk returns a tuple with the SizeCheckWaitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetSizeCheckWaitTimeOk() (*int32, bool) {
	if o == nil || o.SizeCheckWaitTime == nil {
		return nil, false
	}
	return o.SizeCheckWaitTime, true
}

// HasSizeCheckWaitTime returns a boolean if a field has been set.
func (o *EndpointConfig) HasSizeCheckWaitTime() bool {
	if o != nil && o.SizeCheckWaitTime != nil {
		return true
	}

	return false
}

// SetSizeCheckWaitTime gets a reference to the given int32 and assigns it to the SizeCheckWaitTime field.
func (o *EndpointConfig) SetSizeCheckWaitTime(v int32) {
	o.SizeCheckWaitTime = &v
}

// GetResponseTimeout returns the ResponseTimeout field value if set, zero value otherwise.
func (o *EndpointConfig) GetResponseTimeout() int32 {
	if o == nil || o.ResponseTimeout == nil {
		var ret int32
		return ret
	}
	return *o.ResponseTimeout
}

// GetResponseTimeoutOk returns a tuple with the ResponseTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetResponseTimeoutOk() (*int32, bool) {
	if o == nil || o.ResponseTimeout == nil {
		return nil, false
	}
	return o.ResponseTimeout, true
}

// HasResponseTimeout returns a boolean if a field has been set.
func (o *EndpointConfig) HasResponseTimeout() bool {
	if o != nil && o.ResponseTimeout != nil {
		return true
	}

	return false
}

// SetResponseTimeout gets a reference to the given int32 and assigns it to the ResponseTimeout field.
func (o *EndpointConfig) SetResponseTimeout(v int32) {
	o.ResponseTimeout = &v
}

// GetConnectionIdleTimeout returns the ConnectionIdleTimeout field value if set, zero value otherwise.
func (o *EndpointConfig) GetConnectionIdleTimeout() int32 {
	if o == nil || o.ConnectionIdleTimeout == nil {
		var ret int32
		return ret
	}
	return *o.ConnectionIdleTimeout
}

// GetConnectionIdleTimeoutOk returns a tuple with the ConnectionIdleTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetConnectionIdleTimeoutOk() (*int32, bool) {
	if o == nil || o.ConnectionIdleTimeout == nil {
		return nil, false
	}
	return o.ConnectionIdleTimeout, true
}

// HasConnectionIdleTimeout returns a boolean if a field has been set.
func (o *EndpointConfig) HasConnectionIdleTimeout() bool {
	if o != nil && o.ConnectionIdleTimeout != nil {
		return true
	}

	return false
}

// SetConnectionIdleTimeout gets a reference to the given int32 and assigns it to the ConnectionIdleTimeout field.
func (o *EndpointConfig) SetConnectionIdleTimeout(v int32) {
	o.ConnectionIdleTimeout = &v
}

// GetManageWithApiManager returns the ManageWithApiManager field value if set, zero value otherwise.
func (o *EndpointConfig) GetManageWithApiManager() bool {
	if o == nil || o.ManageWithApiManager == nil {
		var ret bool
		return ret
	}
	return *o.ManageWithApiManager
}

// GetManageWithApiManagerOk returns a tuple with the ManageWithApiManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetManageWithApiManagerOk() (*bool, bool) {
	if o == nil || o.ManageWithApiManager == nil {
		return nil, false
	}
	return o.ManageWithApiManager, true
}

// HasManageWithApiManager returns a boolean if a field has been set.
func (o *EndpointConfig) HasManageWithApiManager() bool {
	if o != nil && o.ManageWithApiManager != nil {
		return true
	}

	return false
}

// SetManageWithApiManager gets a reference to the given bool and assigns it to the ManageWithApiManager field.
func (o *EndpointConfig) SetManageWithApiManager(v bool) {
	o.ManageWithApiManager = &v
}

// GetAutoDiscoveryId returns the AutoDiscoveryId field value if set, zero value otherwise.
func (o *EndpointConfig) GetAutoDiscoveryId() string {
	if o == nil || o.AutoDiscoveryId == nil {
		var ret string
		return ret
	}
	return *o.AutoDiscoveryId
}

// GetAutoDiscoveryIdOk returns a tuple with the AutoDiscoveryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetAutoDiscoveryIdOk() (*string, bool) {
	if o == nil || o.AutoDiscoveryId == nil {
		return nil, false
	}
	return o.AutoDiscoveryId, true
}

// HasAutoDiscoveryId returns a boolean if a field has been set.
func (o *EndpointConfig) HasAutoDiscoveryId() bool {
	if o != nil && o.AutoDiscoveryId != nil {
		return true
	}

	return false
}

// SetAutoDiscoveryId gets a reference to the given string and assigns it to the AutoDiscoveryId field.
func (o *EndpointConfig) SetAutoDiscoveryId(v string) {
	o.AutoDiscoveryId = &v
}

// GetCredentialType returns the CredentialType field value if set, zero value otherwise.
func (o *EndpointConfig) GetCredentialType() string {
	if o == nil || o.CredentialType == nil {
		var ret string
		return ret
	}
	return *o.CredentialType
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetCredentialTypeOk() (*string, bool) {
	if o == nil || o.CredentialType == nil {
		return nil, false
	}
	return o.CredentialType, true
}

// HasCredentialType returns a boolean if a field has been set.
func (o *EndpointConfig) HasCredentialType() bool {
	if o != nil && o.CredentialType != nil {
		return true
	}

	return false
}

// SetCredentialType gets a reference to the given string and assigns it to the CredentialType field.
func (o *EndpointConfig) SetCredentialType(v string) {
	o.CredentialType = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *EndpointConfig) GetUsage() string {
	if o == nil || o.Usage == nil {
		var ret string
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetUsageOk() (*string, bool) {
	if o == nil || o.Usage == nil {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *EndpointConfig) HasUsage() bool {
	if o != nil && o.Usage != nil {
		return true
	}

	return false
}

// SetUsage gets a reference to the given string and assigns it to the Usage field.
func (o *EndpointConfig) SetUsage(v string) {
	o.Usage = &v
}

// GetAssociatedMessageTypeId returns the AssociatedMessageTypeId field value if set, zero value otherwise.
func (o *EndpointConfig) GetAssociatedMessageTypeId() string {
	if o == nil || o.AssociatedMessageTypeId == nil {
		var ret string
		return ret
	}
	return *o.AssociatedMessageTypeId
}

// GetAssociatedMessageTypeIdOk returns a tuple with the AssociatedMessageTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetAssociatedMessageTypeIdOk() (*string, bool) {
	if o == nil || o.AssociatedMessageTypeId == nil {
		return nil, false
	}
	return o.AssociatedMessageTypeId, true
}

// HasAssociatedMessageTypeId returns a boolean if a field has been set.
func (o *EndpointConfig) HasAssociatedMessageTypeId() bool {
	if o != nil && o.AssociatedMessageTypeId != nil {
		return true
	}

	return false
}

// SetAssociatedMessageTypeId gets a reference to the given string and assigns it to the AssociatedMessageTypeId field.
func (o *EndpointConfig) SetAssociatedMessageTypeId(v string) {
	o.AssociatedMessageTypeId = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *EndpointConfig) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *EndpointConfig) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *EndpointConfig) SetProtocol(v string) {
	o.Protocol = &v
}

// GetValidWithoutPartner returns the ValidWithoutPartner field value if set, zero value otherwise.
func (o *EndpointConfig) GetValidWithoutPartner() bool {
	if o == nil || o.ValidWithoutPartner == nil {
		var ret bool
		return ret
	}
	return *o.ValidWithoutPartner
}

// GetValidWithoutPartnerOk returns a tuple with the ValidWithoutPartner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetValidWithoutPartnerOk() (*bool, bool) {
	if o == nil || o.ValidWithoutPartner == nil {
		return nil, false
	}
	return o.ValidWithoutPartner, true
}

// HasValidWithoutPartner returns a boolean if a field has been set.
func (o *EndpointConfig) HasValidWithoutPartner() bool {
	if o != nil && o.ValidWithoutPartner != nil {
		return true
	}

	return false
}

// SetValidWithoutPartner gets a reference to the given bool and assigns it to the ValidWithoutPartner field.
func (o *EndpointConfig) SetValidWithoutPartner(v bool) {
	o.ValidWithoutPartner = &v
}

// GetAssociatedReferenceIdentifierId returns the AssociatedReferenceIdentifierId field value if set, zero value otherwise.
func (o *EndpointConfig) GetAssociatedReferenceIdentifierId() string {
	if o == nil || o.AssociatedReferenceIdentifierId == nil {
		var ret string
		return ret
	}
	return *o.AssociatedReferenceIdentifierId
}

// GetAssociatedReferenceIdentifierIdOk returns a tuple with the AssociatedReferenceIdentifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetAssociatedReferenceIdentifierIdOk() (*string, bool) {
	if o == nil || o.AssociatedReferenceIdentifierId == nil {
		return nil, false
	}
	return o.AssociatedReferenceIdentifierId, true
}

// HasAssociatedReferenceIdentifierId returns a boolean if a field has been set.
func (o *EndpointConfig) HasAssociatedReferenceIdentifierId() bool {
	if o != nil && o.AssociatedReferenceIdentifierId != nil {
		return true
	}

	return false
}

// SetAssociatedReferenceIdentifierId gets a reference to the given string and assigns it to the AssociatedReferenceIdentifierId field.
func (o *EndpointConfig) SetAssociatedReferenceIdentifierId(v string) {
	o.AssociatedReferenceIdentifierId = &v
}

// GetFileNamePattern returns the FileNamePattern field value if set, zero value otherwise.
func (o *EndpointConfig) GetFileNamePattern() string {
	if o == nil || o.FileNamePattern == nil {
		var ret string
		return ret
	}
	return *o.FileNamePattern
}

// GetFileNamePatternOk returns a tuple with the FileNamePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetFileNamePatternOk() (*string, bool) {
	if o == nil || o.FileNamePattern == nil {
		return nil, false
	}
	return o.FileNamePattern, true
}

// HasFileNamePattern returns a boolean if a field has been set.
func (o *EndpointConfig) HasFileNamePattern() bool {
	if o != nil && o.FileNamePattern != nil {
		return true
	}

	return false
}

// SetFileNamePattern gets a reference to the given string and assigns it to the FileNamePattern field.
func (o *EndpointConfig) SetFileNamePattern(v string) {
	o.FileNamePattern = &v
}

// GetTlsContext returns the TlsContext field value if set, zero value otherwise.
func (o *EndpointConfig) GetTlsContext() TLSContext {
	if o == nil || o.TlsContext == nil {
		var ret TLSContext
		return ret
	}
	return *o.TlsContext
}

// GetTlsContextOk returns a tuple with the TlsContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetTlsContextOk() (*TLSContext, bool) {
	if o == nil || o.TlsContext == nil {
		return nil, false
	}
	return o.TlsContext, true
}

// HasTlsContext returns a boolean if a field has been set.
func (o *EndpointConfig) HasTlsContext() bool {
	if o != nil && o.TlsContext != nil {
		return true
	}

	return false
}

// SetTlsContext gets a reference to the given TLSContext and assigns it to the TlsContext field.
func (o *EndpointConfig) SetTlsContext(v TLSContext) {
	o.TlsContext = &v
}

// GetVpc returns the Vpc field value if set, zero value otherwise.
func (o *EndpointConfig) GetVpc() EndpointConfigVpc {
	if o == nil || o.Vpc == nil {
		var ret EndpointConfigVpc
		return ret
	}
	return *o.Vpc
}

// GetVpcOk returns a tuple with the Vpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointConfig) GetVpcOk() (*EndpointConfigVpc, bool) {
	if o == nil || o.Vpc == nil {
		return nil, false
	}
	return o.Vpc, true
}

// HasVpc returns a boolean if a field has been set.
func (o *EndpointConfig) HasVpc() bool {
	if o != nil && o.Vpc != nil {
		return true
	}

	return false
}

// SetVpc gets a reference to the given EndpointConfigVpc and assigns it to the Vpc field.
func (o *EndpointConfig) SetVpc(v EndpointConfigVpc) {
	o.Vpc = &v
}

func (o EndpointConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigName != nil {
		toSerialize["configName"] = o.ConfigName
	}
	if o.ServerAddress != nil {
		toSerialize["serverAddress"] = o.ServerAddress
	}
	if o.ServerPort != nil {
		toSerialize["serverPort"] = o.ServerPort
	}
	if o.AuthMode != nil {
		toSerialize["authMode"] = o.AuthMode
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.MovedPath != nil {
		toSerialize["movedPath"] = o.MovedPath
	}
	if o.PollingFrequency != nil {
		toSerialize["pollingFrequency"] = o.PollingFrequency
	}
	if o.SizeCheckWaitTime != nil {
		toSerialize["sizeCheckWaitTime"] = o.SizeCheckWaitTime
	}
	if o.ResponseTimeout != nil {
		toSerialize["responseTimeout"] = o.ResponseTimeout
	}
	if o.ConnectionIdleTimeout != nil {
		toSerialize["connectionIdleTimeout"] = o.ConnectionIdleTimeout
	}
	if o.ManageWithApiManager != nil {
		toSerialize["manageWithApiManager"] = o.ManageWithApiManager
	}
	if o.AutoDiscoveryId != nil {
		toSerialize["autoDiscoveryId"] = o.AutoDiscoveryId
	}
	if o.CredentialType != nil {
		toSerialize["credentialType"] = o.CredentialType
	}
	if o.Usage != nil {
		toSerialize["usage"] = o.Usage
	}
	if o.AssociatedMessageTypeId != nil {
		toSerialize["associatedMessageTypeId"] = o.AssociatedMessageTypeId
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.ValidWithoutPartner != nil {
		toSerialize["validWithoutPartner"] = o.ValidWithoutPartner
	}
	if o.AssociatedReferenceIdentifierId != nil {
		toSerialize["associatedReferenceIdentifierId"] = o.AssociatedReferenceIdentifierId
	}
	if o.FileNamePattern != nil {
		toSerialize["fileNamePattern"] = o.FileNamePattern
	}
	if o.TlsContext != nil {
		toSerialize["tlsContext"] = o.TlsContext
	}
	if o.Vpc != nil {
		toSerialize["vpc"] = o.Vpc
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *EndpointConfig) UnmarshalJSON(bytes []byte) (err error) {
	varEndpointConfig := _EndpointConfig{}

	if err = json.Unmarshal(bytes, &varEndpointConfig); err == nil {
		*o = EndpointConfig(varEndpointConfig)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "configName")
		delete(additionalProperties, "serverAddress")
		delete(additionalProperties, "serverPort")
		delete(additionalProperties, "authMode")
		delete(additionalProperties, "path")
		delete(additionalProperties, "movedPath")
		delete(additionalProperties, "pollingFrequency")
		delete(additionalProperties, "sizeCheckWaitTime")
		delete(additionalProperties, "responseTimeout")
		delete(additionalProperties, "connectionIdleTimeout")
		delete(additionalProperties, "manageWithApiManager")
		delete(additionalProperties, "autoDiscoveryId")
		delete(additionalProperties, "credentialType")
		delete(additionalProperties, "usage")
		delete(additionalProperties, "associatedMessageTypeId")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "validWithoutPartner")
		delete(additionalProperties, "associatedReferenceIdentifierId")
		delete(additionalProperties, "fileNamePattern")
		delete(additionalProperties, "tlsContext")
		delete(additionalProperties, "vpc")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEndpointConfig struct {
	value *EndpointConfig
	isSet bool
}

func (v NullableEndpointConfig) Get() *EndpointConfig {
	return v.value
}

func (v *NullableEndpointConfig) Set(val *EndpointConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointConfig(val *EndpointConfig) *NullableEndpointConfig {
	return &NullableEndpointConfig{value: val, isSet: true}
}

func (v NullableEndpointConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


