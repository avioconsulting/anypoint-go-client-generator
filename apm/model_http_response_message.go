/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// HttpResponseMessage struct for HttpResponseMessage
type HttpResponseMessage struct {
	ErrorCode float32 `json:"errorCode"`
	Message string `json:"message"`
}

// NewHttpResponseMessage instantiates a new HttpResponseMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpResponseMessage(errorCode float32, message string) *HttpResponseMessage {
	this := HttpResponseMessage{}
	this.ErrorCode = errorCode
	this.Message = message
	return &this
}

// NewHttpResponseMessageWithDefaults instantiates a new HttpResponseMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpResponseMessageWithDefaults() *HttpResponseMessage {
	this := HttpResponseMessage{}
	return &this
}

// GetErrorCode returns the ErrorCode field value
func (o *HttpResponseMessage) GetErrorCode() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetErrorCodeOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *HttpResponseMessage) SetErrorCode(v float32) {
	o.ErrorCode = v
}

// GetMessage returns the Message field value
func (o *HttpResponseMessage) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *HttpResponseMessage) GetMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *HttpResponseMessage) SetMessage(v string) {
	o.Message = v
}

func (o HttpResponseMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableHttpResponseMessage struct {
	value *HttpResponseMessage
	isSet bool
}

func (v NullableHttpResponseMessage) Get() *HttpResponseMessage {
	return v.value
}

func (v *NullableHttpResponseMessage) Set(val *HttpResponseMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpResponseMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpResponseMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpResponseMessage(val *HttpResponseMessage) *NullableHttpResponseMessage {
	return &NullableHttpResponseMessage{value: val, isSet: true}
}

func (v NullableHttpResponseMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpResponseMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


