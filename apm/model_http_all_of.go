/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// HttpAllOf struct for HttpAllOf
type HttpAllOf struct {
	Config *HttpConfig `json:"config,omitempty"`
}

// NewHttpAllOf instantiates a new HttpAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpAllOf() *HttpAllOf {
	this := HttpAllOf{}
	return &this
}

// NewHttpAllOfWithDefaults instantiates a new HttpAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpAllOfWithDefaults() *HttpAllOf {
	this := HttpAllOf{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *HttpAllOf) GetConfig() HttpConfig {
	if o == nil || o.Config == nil {
		var ret HttpConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAllOf) GetConfigOk() (*HttpConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *HttpAllOf) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given HttpConfig and assigns it to the Config field.
func (o *HttpAllOf) SetConfig(v HttpConfig) {
	o.Config = &v
}

func (o HttpAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableHttpAllOf struct {
	value *HttpAllOf
	isSet bool
}

func (v NullableHttpAllOf) Get() *HttpAllOf {
	return v.value
}

func (v *NullableHttpAllOf) Set(val *HttpAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpAllOf(val *HttpAllOf) *NullableHttpAllOf {
	return &NullableHttpAllOf{value: val, isSet: true}
}

func (v NullableHttpAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


