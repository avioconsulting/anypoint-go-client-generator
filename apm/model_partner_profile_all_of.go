/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
	"time"
)

// PartnerProfileAllOf struct for PartnerProfileAllOf
type PartnerProfileAllOf struct {
	Logo *Logo `json:"logo,omitempty"`
	Contacts *[]Contact `json:"contacts,omitempty"`
	Identifiers []Identifier `json:"identifiers"`
	Addresses *[]Address `json:"addresses,omitempty"`
	CreatedAt time.Time `json:"created_at"`
	CreatedBy UserDetail `json:"created_by"`
	UpdatedAt time.Time `json:"updated_at"`
	UpdatedBy UserDetail `json:"updated_by"`
	Protocols []string `json:"protocols"`
	Standars []string `json:"standars"`
	UsedInDeployments UsedInDeployments `json:"usedInDeployments"`
}

// NewPartnerProfileAllOf instantiates a new PartnerProfileAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerProfileAllOf(identifiers []Identifier, createdAt time.Time, createdBy UserDetail, updatedAt time.Time, updatedBy UserDetail, protocols []string, standars []string, usedInDeployments UsedInDeployments) *PartnerProfileAllOf {
	this := PartnerProfileAllOf{}
	this.Identifiers = identifiers
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.UpdatedAt = updatedAt
	this.UpdatedBy = updatedBy
	this.Protocols = protocols
	this.Standars = standars
	this.UsedInDeployments = usedInDeployments
	return &this
}

// NewPartnerProfileAllOfWithDefaults instantiates a new PartnerProfileAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerProfileAllOfWithDefaults() *PartnerProfileAllOf {
	this := PartnerProfileAllOf{}
	return &this
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *PartnerProfileAllOf) GetLogo() Logo {
	if o == nil || o.Logo == nil {
		var ret Logo
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetLogoOk() (*Logo, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *PartnerProfileAllOf) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given Logo and assigns it to the Logo field.
func (o *PartnerProfileAllOf) SetLogo(v Logo) {
	o.Logo = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *PartnerProfileAllOf) GetContacts() []Contact {
	if o == nil || o.Contacts == nil {
		var ret []Contact
		return ret
	}
	return *o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetContactsOk() (*[]Contact, bool) {
	if o == nil || o.Contacts == nil {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *PartnerProfileAllOf) HasContacts() bool {
	if o != nil && o.Contacts != nil {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []Contact and assigns it to the Contacts field.
func (o *PartnerProfileAllOf) SetContacts(v []Contact) {
	o.Contacts = &v
}

// GetIdentifiers returns the Identifiers field value
func (o *PartnerProfileAllOf) GetIdentifiers() []Identifier {
	if o == nil {
		var ret []Identifier
		return ret
	}

	return o.Identifiers
}

// GetIdentifiersOk returns a tuple with the Identifiers field value
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetIdentifiersOk() (*[]Identifier, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Identifiers, true
}

// SetIdentifiers sets field value
func (o *PartnerProfileAllOf) SetIdentifiers(v []Identifier) {
	o.Identifiers = v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *PartnerProfileAllOf) GetAddresses() []Address {
	if o == nil || o.Addresses == nil {
		var ret []Address
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetAddressesOk() (*[]Address, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *PartnerProfileAllOf) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []Address and assigns it to the Addresses field.
func (o *PartnerProfileAllOf) SetAddresses(v []Address) {
	o.Addresses = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PartnerProfileAllOf) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PartnerProfileAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *PartnerProfileAllOf) GetCreatedBy() UserDetail {
	if o == nil {
		var ret UserDetail
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetCreatedByOk() (*UserDetail, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *PartnerProfileAllOf) SetCreatedBy(v UserDetail) {
	o.CreatedBy = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PartnerProfileAllOf) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PartnerProfileAllOf) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetUpdatedBy returns the UpdatedBy field value
func (o *PartnerProfileAllOf) GetUpdatedBy() UserDetail {
	if o == nil {
		var ret UserDetail
		return ret
	}

	return o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetUpdatedByOk() (*UserDetail, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedBy, true
}

// SetUpdatedBy sets field value
func (o *PartnerProfileAllOf) SetUpdatedBy(v UserDetail) {
	o.UpdatedBy = v
}

// GetProtocols returns the Protocols field value
func (o *PartnerProfileAllOf) GetProtocols() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetProtocolsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Protocols, true
}

// SetProtocols sets field value
func (o *PartnerProfileAllOf) SetProtocols(v []string) {
	o.Protocols = v
}

// GetStandars returns the Standars field value
func (o *PartnerProfileAllOf) GetStandars() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Standars
}

// GetStandarsOk returns a tuple with the Standars field value
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetStandarsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Standars, true
}

// SetStandars sets field value
func (o *PartnerProfileAllOf) SetStandars(v []string) {
	o.Standars = v
}

// GetUsedInDeployments returns the UsedInDeployments field value
func (o *PartnerProfileAllOf) GetUsedInDeployments() UsedInDeployments {
	if o == nil {
		var ret UsedInDeployments
		return ret
	}

	return o.UsedInDeployments
}

// GetUsedInDeploymentsOk returns a tuple with the UsedInDeployments field value
// and a boolean to check if the value has been set.
func (o *PartnerProfileAllOf) GetUsedInDeploymentsOk() (*UsedInDeployments, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UsedInDeployments, true
}

// SetUsedInDeployments sets field value
func (o *PartnerProfileAllOf) SetUsedInDeployments(v UsedInDeployments) {
	o.UsedInDeployments = v
}

func (o PartnerProfileAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.Contacts != nil {
		toSerialize["contacts"] = o.Contacts
	}
	if true {
		toSerialize["identifiers"] = o.Identifiers
	}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["created_by"] = o.CreatedBy
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if true {
		toSerialize["protocols"] = o.Protocols
	}
	if true {
		toSerialize["standars"] = o.Standars
	}
	if true {
		toSerialize["usedInDeployments"] = o.UsedInDeployments
	}
	return json.Marshal(toSerialize)
}

type NullablePartnerProfileAllOf struct {
	value *PartnerProfileAllOf
	isSet bool
}

func (v NullablePartnerProfileAllOf) Get() *PartnerProfileAllOf {
	return v.value
}

func (v *NullablePartnerProfileAllOf) Set(val *PartnerProfileAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerProfileAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerProfileAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerProfileAllOf(val *PartnerProfileAllOf) *NullablePartnerProfileAllOf {
	return &NullablePartnerProfileAllOf{value: val, isSet: true}
}

func (v NullablePartnerProfileAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerProfileAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


