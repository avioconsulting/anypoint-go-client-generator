/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// EdiFormatConfigurationAcknowledgementSettings struct for EdiFormatConfigurationAcknowledgementSettings
type EdiFormatConfigurationAcknowledgementSettings struct {
	TA *bool `json:"TA,omitempty"`
	FA *bool `json:"FA,omitempty"`
}

// NewEdiFormatConfigurationAcknowledgementSettings instantiates a new EdiFormatConfigurationAcknowledgementSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdiFormatConfigurationAcknowledgementSettings() *EdiFormatConfigurationAcknowledgementSettings {
	this := EdiFormatConfigurationAcknowledgementSettings{}
	return &this
}

// NewEdiFormatConfigurationAcknowledgementSettingsWithDefaults instantiates a new EdiFormatConfigurationAcknowledgementSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdiFormatConfigurationAcknowledgementSettingsWithDefaults() *EdiFormatConfigurationAcknowledgementSettings {
	this := EdiFormatConfigurationAcknowledgementSettings{}
	return &this
}

// GetTA returns the TA field value if set, zero value otherwise.
func (o *EdiFormatConfigurationAcknowledgementSettings) GetTA() bool {
	if o == nil || o.TA == nil {
		var ret bool
		return ret
	}
	return *o.TA
}

// GetTAOk returns a tuple with the TA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationAcknowledgementSettings) GetTAOk() (*bool, bool) {
	if o == nil || o.TA == nil {
		return nil, false
	}
	return o.TA, true
}

// HasTA returns a boolean if a field has been set.
func (o *EdiFormatConfigurationAcknowledgementSettings) HasTA() bool {
	if o != nil && o.TA != nil {
		return true
	}

	return false
}

// SetTA gets a reference to the given bool and assigns it to the TA field.
func (o *EdiFormatConfigurationAcknowledgementSettings) SetTA(v bool) {
	o.TA = &v
}

// GetFA returns the FA field value if set, zero value otherwise.
func (o *EdiFormatConfigurationAcknowledgementSettings) GetFA() bool {
	if o == nil || o.FA == nil {
		var ret bool
		return ret
	}
	return *o.FA
}

// GetFAOk returns a tuple with the FA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationAcknowledgementSettings) GetFAOk() (*bool, bool) {
	if o == nil || o.FA == nil {
		return nil, false
	}
	return o.FA, true
}

// HasFA returns a boolean if a field has been set.
func (o *EdiFormatConfigurationAcknowledgementSettings) HasFA() bool {
	if o != nil && o.FA != nil {
		return true
	}

	return false
}

// SetFA gets a reference to the given bool and assigns it to the FA field.
func (o *EdiFormatConfigurationAcknowledgementSettings) SetFA(v bool) {
	o.FA = &v
}

func (o EdiFormatConfigurationAcknowledgementSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TA != nil {
		toSerialize["TA"] = o.TA
	}
	if o.FA != nil {
		toSerialize["FA"] = o.FA
	}
	return json.Marshal(toSerialize)
}

type NullableEdiFormatConfigurationAcknowledgementSettings struct {
	value *EdiFormatConfigurationAcknowledgementSettings
	isSet bool
}

func (v NullableEdiFormatConfigurationAcknowledgementSettings) Get() *EdiFormatConfigurationAcknowledgementSettings {
	return v.value
}

func (v *NullableEdiFormatConfigurationAcknowledgementSettings) Set(val *EdiFormatConfigurationAcknowledgementSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableEdiFormatConfigurationAcknowledgementSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableEdiFormatConfigurationAcknowledgementSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdiFormatConfigurationAcknowledgementSettings(val *EdiFormatConfigurationAcknowledgementSettings) *NullableEdiFormatConfigurationAcknowledgementSettings {
	return &NullableEdiFormatConfigurationAcknowledgementSettings{value: val, isSet: true}
}

func (v NullableEdiFormatConfigurationAcknowledgementSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdiFormatConfigurationAcknowledgementSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


