/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
	"fmt"
)

// EdiFormatTypes the model 'EdiFormatTypes'
type EdiFormatTypes string

// List of ediFormatTypes
const (
	X12 EdiFormatTypes = "X12"
	EDIFACT EdiFormatTypes = "EDIFACT"
	JSON EdiFormatTypes = "JSON"
)

func (v *EdiFormatTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EdiFormatTypes(value)
	for _, existing := range []EdiFormatTypes{ "X12", "EDIFACT", "JSON",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EdiFormatTypes", value)
}

// Ptr returns reference to ediFormatTypes value
func (v EdiFormatTypes) Ptr() *EdiFormatTypes {
	return &v
}

type NullableEdiFormatTypes struct {
	value *EdiFormatTypes
	isSet bool
}

func (v NullableEdiFormatTypes) Get() *EdiFormatTypes {
	return v.value
}

func (v *NullableEdiFormatTypes) Set(val *EdiFormatTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableEdiFormatTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableEdiFormatTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdiFormatTypes(val *EdiFormatTypes) *NullableEdiFormatTypes {
	return &NullableEdiFormatTypes{value: val, isSet: true}
}

func (v NullableEdiFormatTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdiFormatTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

