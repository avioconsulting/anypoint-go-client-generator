/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// GroupCode struct for GroupCode
type GroupCode struct {
	GroupCode string `json:"groupCode"`
	Codes [][]CodeKeyVal `json:"codes"`
}

// NewGroupCode instantiates a new GroupCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupCode(groupCode string, codes [][]CodeKeyVal) *GroupCode {
	this := GroupCode{}
	this.GroupCode = groupCode
	this.Codes = codes
	return &this
}

// NewGroupCodeWithDefaults instantiates a new GroupCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupCodeWithDefaults() *GroupCode {
	this := GroupCode{}
	return &this
}

// GetGroupCode returns the GroupCode field value
func (o *GroupCode) GetGroupCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupCode
}

// GetGroupCodeOk returns a tuple with the GroupCode field value
// and a boolean to check if the value has been set.
func (o *GroupCode) GetGroupCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GroupCode, true
}

// SetGroupCode sets field value
func (o *GroupCode) SetGroupCode(v string) {
	o.GroupCode = v
}

// GetCodes returns the Codes field value
func (o *GroupCode) GetCodes() [][]CodeKeyVal {
	if o == nil {
		var ret [][]CodeKeyVal
		return ret
	}

	return o.Codes
}

// GetCodesOk returns a tuple with the Codes field value
// and a boolean to check if the value has been set.
func (o *GroupCode) GetCodesOk() (*[][]CodeKeyVal, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Codes, true
}

// SetCodes sets field value
func (o *GroupCode) SetCodes(v [][]CodeKeyVal) {
	o.Codes = v
}

func (o GroupCode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["groupCode"] = o.GroupCode
	}
	if true {
		toSerialize["codes"] = o.Codes
	}
	return json.Marshal(toSerialize)
}

type NullableGroupCode struct {
	value *GroupCode
	isSet bool
}

func (v NullableGroupCode) Get() *GroupCode {
	return v.value
}

func (v *NullableGroupCode) Set(val *GroupCode) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupCode) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupCode(val *GroupCode) *NullableGroupCode {
	return &NullableGroupCode{value: val, isSet: true}
}

func (v NullableGroupCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


