/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
	"time"
)

// BaseEndpoint struct for BaseEndpoint
type BaseEndpoint struct {
	Id *string `json:"id,omitempty"`
	Name string `json:"name"`
	Description string `json:"description"`
	EnvironmentId string `json:"environmentId"`
	EndpointTypeId string `json:"endpointTypeId"`
	Partner *Partner `json:"partner,omitempty"`
	PartnerId *string `json:"partnerId,omitempty"`
	Deployment *EndpointDeployment `json:"deployment,omitempty"`
	EndpointRole EndpointRoleType `json:"endpointRole"`
	EndpointType *string `json:"endpointType,omitempty"`
	Config BaseEndpointConfig `json:"config"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	CreatedBy *UserDetail `json:"createdBy,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	UpdatedBy *UserDetail `json:"updatedBy,omitempty"`
}

// NewBaseEndpoint instantiates a new BaseEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseEndpoint(name string, description string, environmentId string, endpointTypeId string, endpointRole EndpointRoleType, config BaseEndpointConfig) *BaseEndpoint {
	this := BaseEndpoint{}
	this.Name = name
	this.Description = description
	this.EnvironmentId = environmentId
	this.EndpointTypeId = endpointTypeId
	this.EndpointRole = endpointRole
	this.Config = config
	return &this
}

// NewBaseEndpointWithDefaults instantiates a new BaseEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseEndpointWithDefaults() *BaseEndpoint {
	this := BaseEndpoint{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BaseEndpoint) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BaseEndpoint) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BaseEndpoint) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *BaseEndpoint) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BaseEndpoint) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *BaseEndpoint) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *BaseEndpoint) SetDescription(v string) {
	o.Description = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *BaseEndpoint) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetEnvironmentIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *BaseEndpoint) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetEndpointTypeId returns the EndpointTypeId field value
func (o *BaseEndpoint) GetEndpointTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointTypeId
}

// GetEndpointTypeIdOk returns a tuple with the EndpointTypeId field value
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetEndpointTypeIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndpointTypeId, true
}

// SetEndpointTypeId sets field value
func (o *BaseEndpoint) SetEndpointTypeId(v string) {
	o.EndpointTypeId = v
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *BaseEndpoint) GetPartner() Partner {
	if o == nil || o.Partner == nil {
		var ret Partner
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetPartnerOk() (*Partner, bool) {
	if o == nil || o.Partner == nil {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *BaseEndpoint) HasPartner() bool {
	if o != nil && o.Partner != nil {
		return true
	}

	return false
}

// SetPartner gets a reference to the given Partner and assigns it to the Partner field.
func (o *BaseEndpoint) SetPartner(v Partner) {
	o.Partner = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *BaseEndpoint) GetPartnerId() string {
	if o == nil || o.PartnerId == nil {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetPartnerIdOk() (*string, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *BaseEndpoint) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *BaseEndpoint) SetPartnerId(v string) {
	o.PartnerId = &v
}

// GetDeployment returns the Deployment field value if set, zero value otherwise.
func (o *BaseEndpoint) GetDeployment() EndpointDeployment {
	if o == nil || o.Deployment == nil {
		var ret EndpointDeployment
		return ret
	}
	return *o.Deployment
}

// GetDeploymentOk returns a tuple with the Deployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetDeploymentOk() (*EndpointDeployment, bool) {
	if o == nil || o.Deployment == nil {
		return nil, false
	}
	return o.Deployment, true
}

// HasDeployment returns a boolean if a field has been set.
func (o *BaseEndpoint) HasDeployment() bool {
	if o != nil && o.Deployment != nil {
		return true
	}

	return false
}

// SetDeployment gets a reference to the given EndpointDeployment and assigns it to the Deployment field.
func (o *BaseEndpoint) SetDeployment(v EndpointDeployment) {
	o.Deployment = &v
}

// GetEndpointRole returns the EndpointRole field value
func (o *BaseEndpoint) GetEndpointRole() EndpointRoleType {
	if o == nil {
		var ret EndpointRoleType
		return ret
	}

	return o.EndpointRole
}

// GetEndpointRoleOk returns a tuple with the EndpointRole field value
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetEndpointRoleOk() (*EndpointRoleType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndpointRole, true
}

// SetEndpointRole sets field value
func (o *BaseEndpoint) SetEndpointRole(v EndpointRoleType) {
	o.EndpointRole = v
}

// GetEndpointType returns the EndpointType field value if set, zero value otherwise.
func (o *BaseEndpoint) GetEndpointType() string {
	if o == nil || o.EndpointType == nil {
		var ret string
		return ret
	}
	return *o.EndpointType
}

// GetEndpointTypeOk returns a tuple with the EndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetEndpointTypeOk() (*string, bool) {
	if o == nil || o.EndpointType == nil {
		return nil, false
	}
	return o.EndpointType, true
}

// HasEndpointType returns a boolean if a field has been set.
func (o *BaseEndpoint) HasEndpointType() bool {
	if o != nil && o.EndpointType != nil {
		return true
	}

	return false
}

// SetEndpointType gets a reference to the given string and assigns it to the EndpointType field.
func (o *BaseEndpoint) SetEndpointType(v string) {
	o.EndpointType = &v
}

// GetConfig returns the Config field value
func (o *BaseEndpoint) GetConfig() BaseEndpointConfig {
	if o == nil {
		var ret BaseEndpointConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetConfigOk() (*BaseEndpointConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *BaseEndpoint) SetConfig(v BaseEndpointConfig) {
	o.Config = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BaseEndpoint) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BaseEndpoint) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *BaseEndpoint) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *BaseEndpoint) GetCreatedBy() UserDetail {
	if o == nil || o.CreatedBy == nil {
		var ret UserDetail
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetCreatedByOk() (*UserDetail, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *BaseEndpoint) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given UserDetail and assigns it to the CreatedBy field.
func (o *BaseEndpoint) SetCreatedBy(v UserDetail) {
	o.CreatedBy = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *BaseEndpoint) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BaseEndpoint) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *BaseEndpoint) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *BaseEndpoint) GetUpdatedBy() UserDetail {
	if o == nil || o.UpdatedBy == nil {
		var ret UserDetail
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEndpoint) GetUpdatedByOk() (*UserDetail, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *BaseEndpoint) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given UserDetail and assigns it to the UpdatedBy field.
func (o *BaseEndpoint) SetUpdatedBy(v UserDetail) {
	o.UpdatedBy = &v
}

func (o BaseEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if true {
		toSerialize["endpointTypeId"] = o.EndpointTypeId
	}
	if o.Partner != nil {
		toSerialize["partner"] = o.Partner
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Deployment != nil {
		toSerialize["deployment"] = o.Deployment
	}
	if true {
		toSerialize["endpointRole"] = o.EndpointRole
	}
	if o.EndpointType != nil {
		toSerialize["endpointType"] = o.EndpointType
	}
	if true {
		toSerialize["config"] = o.Config
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	return json.Marshal(toSerialize)
}

type NullableBaseEndpoint struct {
	value *BaseEndpoint
	isSet bool
}

func (v NullableBaseEndpoint) Get() *BaseEndpoint {
	return v.value
}

func (v *NullableBaseEndpoint) Set(val *BaseEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseEndpoint(val *BaseEndpoint) *NullableBaseEndpoint {
	return &NullableBaseEndpoint{value: val, isSet: true}
}

func (v NullableBaseEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


