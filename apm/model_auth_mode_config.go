/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// AuthModeConfig struct for AuthModeConfig
type AuthModeConfig struct {
	AuthType *string `json:"authType,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	ClientId *string `json:"clientId,omitempty"`
	ClientSecret *string `json:"clientSecret,omitempty"`
	ClientIdHeader *string `json:"clientIdHeader,omitempty"`
	ClientSecretHeader *string `json:"clientSecretHeader,omitempty"`
}

// NewAuthModeConfig instantiates a new AuthModeConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthModeConfig() *AuthModeConfig {
	this := AuthModeConfig{}
	return &this
}

// NewAuthModeConfigWithDefaults instantiates a new AuthModeConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthModeConfigWithDefaults() *AuthModeConfig {
	this := AuthModeConfig{}
	return &this
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *AuthModeConfig) GetAuthType() string {
	if o == nil || o.AuthType == nil {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeConfig) GetAuthTypeOk() (*string, bool) {
	if o == nil || o.AuthType == nil {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *AuthModeConfig) HasAuthType() bool {
	if o != nil && o.AuthType != nil {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *AuthModeConfig) SetAuthType(v string) {
	o.AuthType = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AuthModeConfig) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeConfig) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AuthModeConfig) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AuthModeConfig) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AuthModeConfig) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeConfig) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AuthModeConfig) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AuthModeConfig) SetPassword(v string) {
	o.Password = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *AuthModeConfig) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeConfig) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *AuthModeConfig) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *AuthModeConfig) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *AuthModeConfig) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeConfig) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *AuthModeConfig) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *AuthModeConfig) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetClientIdHeader returns the ClientIdHeader field value if set, zero value otherwise.
func (o *AuthModeConfig) GetClientIdHeader() string {
	if o == nil || o.ClientIdHeader == nil {
		var ret string
		return ret
	}
	return *o.ClientIdHeader
}

// GetClientIdHeaderOk returns a tuple with the ClientIdHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeConfig) GetClientIdHeaderOk() (*string, bool) {
	if o == nil || o.ClientIdHeader == nil {
		return nil, false
	}
	return o.ClientIdHeader, true
}

// HasClientIdHeader returns a boolean if a field has been set.
func (o *AuthModeConfig) HasClientIdHeader() bool {
	if o != nil && o.ClientIdHeader != nil {
		return true
	}

	return false
}

// SetClientIdHeader gets a reference to the given string and assigns it to the ClientIdHeader field.
func (o *AuthModeConfig) SetClientIdHeader(v string) {
	o.ClientIdHeader = &v
}

// GetClientSecretHeader returns the ClientSecretHeader field value if set, zero value otherwise.
func (o *AuthModeConfig) GetClientSecretHeader() string {
	if o == nil || o.ClientSecretHeader == nil {
		var ret string
		return ret
	}
	return *o.ClientSecretHeader
}

// GetClientSecretHeaderOk returns a tuple with the ClientSecretHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthModeConfig) GetClientSecretHeaderOk() (*string, bool) {
	if o == nil || o.ClientSecretHeader == nil {
		return nil, false
	}
	return o.ClientSecretHeader, true
}

// HasClientSecretHeader returns a boolean if a field has been set.
func (o *AuthModeConfig) HasClientSecretHeader() bool {
	if o != nil && o.ClientSecretHeader != nil {
		return true
	}

	return false
}

// SetClientSecretHeader gets a reference to the given string and assigns it to the ClientSecretHeader field.
func (o *AuthModeConfig) SetClientSecretHeader(v string) {
	o.ClientSecretHeader = &v
}

func (o AuthModeConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthType != nil {
		toSerialize["authType"] = o.AuthType
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.ClientId != nil {
		toSerialize["clientId"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if o.ClientIdHeader != nil {
		toSerialize["clientIdHeader"] = o.ClientIdHeader
	}
	if o.ClientSecretHeader != nil {
		toSerialize["clientSecretHeader"] = o.ClientSecretHeader
	}
	return json.Marshal(toSerialize)
}

type NullableAuthModeConfig struct {
	value *AuthModeConfig
	isSet bool
}

func (v NullableAuthModeConfig) Get() *AuthModeConfig {
	return v.value
}

func (v *NullableAuthModeConfig) Set(val *AuthModeConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthModeConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthModeConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthModeConfig(val *AuthModeConfig) *NullableAuthModeConfig {
	return &NullableAuthModeConfig{value: val, isSet: true}
}

func (v NullableAuthModeConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthModeConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


