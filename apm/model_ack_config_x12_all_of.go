/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// AckConfigX12AllOf struct for AckConfigX12AllOf
type AckConfigX12AllOf struct {
	Require997 *bool `json:"require997,omitempty"`
	Generate999 *bool `json:"generate999,omitempty"`
}

// NewAckConfigX12AllOf instantiates a new AckConfigX12AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAckConfigX12AllOf() *AckConfigX12AllOf {
	this := AckConfigX12AllOf{}
	return &this
}

// NewAckConfigX12AllOfWithDefaults instantiates a new AckConfigX12AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAckConfigX12AllOfWithDefaults() *AckConfigX12AllOf {
	this := AckConfigX12AllOf{}
	return &this
}

// GetRequire997 returns the Require997 field value if set, zero value otherwise.
func (o *AckConfigX12AllOf) GetRequire997() bool {
	if o == nil || o.Require997 == nil {
		var ret bool
		return ret
	}
	return *o.Require997
}

// GetRequire997Ok returns a tuple with the Require997 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AckConfigX12AllOf) GetRequire997Ok() (*bool, bool) {
	if o == nil || o.Require997 == nil {
		return nil, false
	}
	return o.Require997, true
}

// HasRequire997 returns a boolean if a field has been set.
func (o *AckConfigX12AllOf) HasRequire997() bool {
	if o != nil && o.Require997 != nil {
		return true
	}

	return false
}

// SetRequire997 gets a reference to the given bool and assigns it to the Require997 field.
func (o *AckConfigX12AllOf) SetRequire997(v bool) {
	o.Require997 = &v
}

// GetGenerate999 returns the Generate999 field value if set, zero value otherwise.
func (o *AckConfigX12AllOf) GetGenerate999() bool {
	if o == nil || o.Generate999 == nil {
		var ret bool
		return ret
	}
	return *o.Generate999
}

// GetGenerate999Ok returns a tuple with the Generate999 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AckConfigX12AllOf) GetGenerate999Ok() (*bool, bool) {
	if o == nil || o.Generate999 == nil {
		return nil, false
	}
	return o.Generate999, true
}

// HasGenerate999 returns a boolean if a field has been set.
func (o *AckConfigX12AllOf) HasGenerate999() bool {
	if o != nil && o.Generate999 != nil {
		return true
	}

	return false
}

// SetGenerate999 gets a reference to the given bool and assigns it to the Generate999 field.
func (o *AckConfigX12AllOf) SetGenerate999(v bool) {
	o.Generate999 = &v
}

func (o AckConfigX12AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Require997 != nil {
		toSerialize["require997"] = o.Require997
	}
	if o.Generate999 != nil {
		toSerialize["generate999"] = o.Generate999
	}
	return json.Marshal(toSerialize)
}

type NullableAckConfigX12AllOf struct {
	value *AckConfigX12AllOf
	isSet bool
}

func (v NullableAckConfigX12AllOf) Get() *AckConfigX12AllOf {
	return v.value
}

func (v *NullableAckConfigX12AllOf) Set(val *AckConfigX12AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAckConfigX12AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAckConfigX12AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAckConfigX12AllOf(val *AckConfigX12AllOf) *NullableAckConfigX12AllOf {
	return &NullableAckConfigX12AllOf{value: val, isSet: true}
}

func (v NullableAckConfigX12AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAckConfigX12AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


