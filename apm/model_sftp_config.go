/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// SftpConfig SFTP Configuration
type SftpConfig struct {
	BaseEndpointConfig
	ServerAddress *string `json:"serverAddress,omitempty"`
	ServerPort *int32 `json:"serverPort,omitempty"`
	AuthMode *AuthModeBasic `json:"authMode,omitempty"`
	FileAge *float32 `json:"fileAge,omitempty"`
	PollingFrequency *float32 `json:"pollingFrequency,omitempty"`
	SizeCheckWaitTime *int32 `json:"sizeCheckWaitTime,omitempty"`
}

// NewSftpConfig instantiates a new SftpConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSftpConfig(configName string) *SftpConfig {
	this := SftpConfig{}
	this.ConfigName = configName
	return &this
}

// NewSftpConfigWithDefaults instantiates a new SftpConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSftpConfigWithDefaults() *SftpConfig {
	this := SftpConfig{}
	return &this
}

// GetServerAddress returns the ServerAddress field value if set, zero value otherwise.
func (o *SftpConfig) GetServerAddress() string {
	if o == nil || o.ServerAddress == nil {
		var ret string
		return ret
	}
	return *o.ServerAddress
}

// GetServerAddressOk returns a tuple with the ServerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SftpConfig) GetServerAddressOk() (*string, bool) {
	if o == nil || o.ServerAddress == nil {
		return nil, false
	}
	return o.ServerAddress, true
}

// HasServerAddress returns a boolean if a field has been set.
func (o *SftpConfig) HasServerAddress() bool {
	if o != nil && o.ServerAddress != nil {
		return true
	}

	return false
}

// SetServerAddress gets a reference to the given string and assigns it to the ServerAddress field.
func (o *SftpConfig) SetServerAddress(v string) {
	o.ServerAddress = &v
}

// GetServerPort returns the ServerPort field value if set, zero value otherwise.
func (o *SftpConfig) GetServerPort() int32 {
	if o == nil || o.ServerPort == nil {
		var ret int32
		return ret
	}
	return *o.ServerPort
}

// GetServerPortOk returns a tuple with the ServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SftpConfig) GetServerPortOk() (*int32, bool) {
	if o == nil || o.ServerPort == nil {
		return nil, false
	}
	return o.ServerPort, true
}

// HasServerPort returns a boolean if a field has been set.
func (o *SftpConfig) HasServerPort() bool {
	if o != nil && o.ServerPort != nil {
		return true
	}

	return false
}

// SetServerPort gets a reference to the given int32 and assigns it to the ServerPort field.
func (o *SftpConfig) SetServerPort(v int32) {
	o.ServerPort = &v
}

// GetAuthMode returns the AuthMode field value if set, zero value otherwise.
func (o *SftpConfig) GetAuthMode() AuthModeBasic {
	if o == nil || o.AuthMode == nil {
		var ret AuthModeBasic
		return ret
	}
	return *o.AuthMode
}

// GetAuthModeOk returns a tuple with the AuthMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SftpConfig) GetAuthModeOk() (*AuthModeBasic, bool) {
	if o == nil || o.AuthMode == nil {
		return nil, false
	}
	return o.AuthMode, true
}

// HasAuthMode returns a boolean if a field has been set.
func (o *SftpConfig) HasAuthMode() bool {
	if o != nil && o.AuthMode != nil {
		return true
	}

	return false
}

// SetAuthMode gets a reference to the given AuthModeBasic and assigns it to the AuthMode field.
func (o *SftpConfig) SetAuthMode(v AuthModeBasic) {
	o.AuthMode = &v
}

// GetFileAge returns the FileAge field value if set, zero value otherwise.
func (o *SftpConfig) GetFileAge() float32 {
	if o == nil || o.FileAge == nil {
		var ret float32
		return ret
	}
	return *o.FileAge
}

// GetFileAgeOk returns a tuple with the FileAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SftpConfig) GetFileAgeOk() (*float32, bool) {
	if o == nil || o.FileAge == nil {
		return nil, false
	}
	return o.FileAge, true
}

// HasFileAge returns a boolean if a field has been set.
func (o *SftpConfig) HasFileAge() bool {
	if o != nil && o.FileAge != nil {
		return true
	}

	return false
}

// SetFileAge gets a reference to the given float32 and assigns it to the FileAge field.
func (o *SftpConfig) SetFileAge(v float32) {
	o.FileAge = &v
}

// GetPollingFrequency returns the PollingFrequency field value if set, zero value otherwise.
func (o *SftpConfig) GetPollingFrequency() float32 {
	if o == nil || o.PollingFrequency == nil {
		var ret float32
		return ret
	}
	return *o.PollingFrequency
}

// GetPollingFrequencyOk returns a tuple with the PollingFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SftpConfig) GetPollingFrequencyOk() (*float32, bool) {
	if o == nil || o.PollingFrequency == nil {
		return nil, false
	}
	return o.PollingFrequency, true
}

// HasPollingFrequency returns a boolean if a field has been set.
func (o *SftpConfig) HasPollingFrequency() bool {
	if o != nil && o.PollingFrequency != nil {
		return true
	}

	return false
}

// SetPollingFrequency gets a reference to the given float32 and assigns it to the PollingFrequency field.
func (o *SftpConfig) SetPollingFrequency(v float32) {
	o.PollingFrequency = &v
}

// GetSizeCheckWaitTime returns the SizeCheckWaitTime field value if set, zero value otherwise.
func (o *SftpConfig) GetSizeCheckWaitTime() int32 {
	if o == nil || o.SizeCheckWaitTime == nil {
		var ret int32
		return ret
	}
	return *o.SizeCheckWaitTime
}

// GetSizeCheckWaitTimeOk returns a tuple with the SizeCheckWaitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SftpConfig) GetSizeCheckWaitTimeOk() (*int32, bool) {
	if o == nil || o.SizeCheckWaitTime == nil {
		return nil, false
	}
	return o.SizeCheckWaitTime, true
}

// HasSizeCheckWaitTime returns a boolean if a field has been set.
func (o *SftpConfig) HasSizeCheckWaitTime() bool {
	if o != nil && o.SizeCheckWaitTime != nil {
		return true
	}

	return false
}

// SetSizeCheckWaitTime gets a reference to the given int32 and assigns it to the SizeCheckWaitTime field.
func (o *SftpConfig) SetSizeCheckWaitTime(v int32) {
	o.SizeCheckWaitTime = &v
}

func (o SftpConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBaseEndpointConfig, errBaseEndpointConfig := json.Marshal(o.BaseEndpointConfig)
	if errBaseEndpointConfig != nil {
		return []byte{}, errBaseEndpointConfig
	}
	errBaseEndpointConfig = json.Unmarshal([]byte(serializedBaseEndpointConfig), &toSerialize)
	if errBaseEndpointConfig != nil {
		return []byte{}, errBaseEndpointConfig
	}
	if o.ServerAddress != nil {
		toSerialize["serverAddress"] = o.ServerAddress
	}
	if o.ServerPort != nil {
		toSerialize["serverPort"] = o.ServerPort
	}
	if o.AuthMode != nil {
		toSerialize["authMode"] = o.AuthMode
	}
	if o.FileAge != nil {
		toSerialize["fileAge"] = o.FileAge
	}
	if o.PollingFrequency != nil {
		toSerialize["pollingFrequency"] = o.PollingFrequency
	}
	if o.SizeCheckWaitTime != nil {
		toSerialize["sizeCheckWaitTime"] = o.SizeCheckWaitTime
	}
	return json.Marshal(toSerialize)
}

type NullableSftpConfig struct {
	value *SftpConfig
	isSet bool
}

func (v NullableSftpConfig) Get() *SftpConfig {
	return v.value
}

func (v *NullableSftpConfig) Set(val *SftpConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSftpConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSftpConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSftpConfig(val *SftpConfig) *NullableSftpConfig {
	return &NullableSftpConfig{value: val, isSet: true}
}

func (v NullableSftpConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSftpConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


