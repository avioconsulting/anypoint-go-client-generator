/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// EdiFormatConfigurationWriterSettings struct for EdiFormatConfigurationWriterSettings
type EdiFormatConfigurationWriterSettings struct {
	WriteEnforceLengthLimits *bool `json:"writeEnforceLengthLimits,omitempty"`
	EnforceConditionalRulesOnWriter *bool `json:"enforceConditionalRulesOnWriter,omitempty"`
	EnforceCodeSetValidationsWrite *bool `json:"enforceCodeSetValidationsWrite,omitempty"`
}

// NewEdiFormatConfigurationWriterSettings instantiates a new EdiFormatConfigurationWriterSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdiFormatConfigurationWriterSettings() *EdiFormatConfigurationWriterSettings {
	this := EdiFormatConfigurationWriterSettings{}
	return &this
}

// NewEdiFormatConfigurationWriterSettingsWithDefaults instantiates a new EdiFormatConfigurationWriterSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdiFormatConfigurationWriterSettingsWithDefaults() *EdiFormatConfigurationWriterSettings {
	this := EdiFormatConfigurationWriterSettings{}
	return &this
}

// GetWriteEnforceLengthLimits returns the WriteEnforceLengthLimits field value if set, zero value otherwise.
func (o *EdiFormatConfigurationWriterSettings) GetWriteEnforceLengthLimits() bool {
	if o == nil || o.WriteEnforceLengthLimits == nil {
		var ret bool
		return ret
	}
	return *o.WriteEnforceLengthLimits
}

// GetWriteEnforceLengthLimitsOk returns a tuple with the WriteEnforceLengthLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationWriterSettings) GetWriteEnforceLengthLimitsOk() (*bool, bool) {
	if o == nil || o.WriteEnforceLengthLimits == nil {
		return nil, false
	}
	return o.WriteEnforceLengthLimits, true
}

// HasWriteEnforceLengthLimits returns a boolean if a field has been set.
func (o *EdiFormatConfigurationWriterSettings) HasWriteEnforceLengthLimits() bool {
	if o != nil && o.WriteEnforceLengthLimits != nil {
		return true
	}

	return false
}

// SetWriteEnforceLengthLimits gets a reference to the given bool and assigns it to the WriteEnforceLengthLimits field.
func (o *EdiFormatConfigurationWriterSettings) SetWriteEnforceLengthLimits(v bool) {
	o.WriteEnforceLengthLimits = &v
}

// GetEnforceConditionalRulesOnWriter returns the EnforceConditionalRulesOnWriter field value if set, zero value otherwise.
func (o *EdiFormatConfigurationWriterSettings) GetEnforceConditionalRulesOnWriter() bool {
	if o == nil || o.EnforceConditionalRulesOnWriter == nil {
		var ret bool
		return ret
	}
	return *o.EnforceConditionalRulesOnWriter
}

// GetEnforceConditionalRulesOnWriterOk returns a tuple with the EnforceConditionalRulesOnWriter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationWriterSettings) GetEnforceConditionalRulesOnWriterOk() (*bool, bool) {
	if o == nil || o.EnforceConditionalRulesOnWriter == nil {
		return nil, false
	}
	return o.EnforceConditionalRulesOnWriter, true
}

// HasEnforceConditionalRulesOnWriter returns a boolean if a field has been set.
func (o *EdiFormatConfigurationWriterSettings) HasEnforceConditionalRulesOnWriter() bool {
	if o != nil && o.EnforceConditionalRulesOnWriter != nil {
		return true
	}

	return false
}

// SetEnforceConditionalRulesOnWriter gets a reference to the given bool and assigns it to the EnforceConditionalRulesOnWriter field.
func (o *EdiFormatConfigurationWriterSettings) SetEnforceConditionalRulesOnWriter(v bool) {
	o.EnforceConditionalRulesOnWriter = &v
}

// GetEnforceCodeSetValidationsWrite returns the EnforceCodeSetValidationsWrite field value if set, zero value otherwise.
func (o *EdiFormatConfigurationWriterSettings) GetEnforceCodeSetValidationsWrite() bool {
	if o == nil || o.EnforceCodeSetValidationsWrite == nil {
		var ret bool
		return ret
	}
	return *o.EnforceCodeSetValidationsWrite
}

// GetEnforceCodeSetValidationsWriteOk returns a tuple with the EnforceCodeSetValidationsWrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdiFormatConfigurationWriterSettings) GetEnforceCodeSetValidationsWriteOk() (*bool, bool) {
	if o == nil || o.EnforceCodeSetValidationsWrite == nil {
		return nil, false
	}
	return o.EnforceCodeSetValidationsWrite, true
}

// HasEnforceCodeSetValidationsWrite returns a boolean if a field has been set.
func (o *EdiFormatConfigurationWriterSettings) HasEnforceCodeSetValidationsWrite() bool {
	if o != nil && o.EnforceCodeSetValidationsWrite != nil {
		return true
	}

	return false
}

// SetEnforceCodeSetValidationsWrite gets a reference to the given bool and assigns it to the EnforceCodeSetValidationsWrite field.
func (o *EdiFormatConfigurationWriterSettings) SetEnforceCodeSetValidationsWrite(v bool) {
	o.EnforceCodeSetValidationsWrite = &v
}

func (o EdiFormatConfigurationWriterSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WriteEnforceLengthLimits != nil {
		toSerialize["writeEnforceLengthLimits"] = o.WriteEnforceLengthLimits
	}
	if o.EnforceConditionalRulesOnWriter != nil {
		toSerialize["enforceConditionalRulesOnWriter"] = o.EnforceConditionalRulesOnWriter
	}
	if o.EnforceCodeSetValidationsWrite != nil {
		toSerialize["enforceCodeSetValidationsWrite"] = o.EnforceCodeSetValidationsWrite
	}
	return json.Marshal(toSerialize)
}

type NullableEdiFormatConfigurationWriterSettings struct {
	value *EdiFormatConfigurationWriterSettings
	isSet bool
}

func (v NullableEdiFormatConfigurationWriterSettings) Get() *EdiFormatConfigurationWriterSettings {
	return v.value
}

func (v *NullableEdiFormatConfigurationWriterSettings) Set(val *EdiFormatConfigurationWriterSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableEdiFormatConfigurationWriterSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableEdiFormatConfigurationWriterSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdiFormatConfigurationWriterSettings(val *EdiFormatConfigurationWriterSettings) *NullableEdiFormatConfigurationWriterSettings {
	return &NullableEdiFormatConfigurationWriterSettings{value: val, isSet: true}
}

func (v NullableEdiFormatConfigurationWriterSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdiFormatConfigurationWriterSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


