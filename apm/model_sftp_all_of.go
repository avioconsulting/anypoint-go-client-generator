/*
 * Partner Manager Partners API
 *
 * Anypoint Partner Manager - Partners API
 *
 * API version: v1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// SftpAllOf struct for SftpAllOf
type SftpAllOf struct {
	Config *SftpConfig `json:"config,omitempty"`
}

// NewSftpAllOf instantiates a new SftpAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSftpAllOf() *SftpAllOf {
	this := SftpAllOf{}
	return &this
}

// NewSftpAllOfWithDefaults instantiates a new SftpAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSftpAllOfWithDefaults() *SftpAllOf {
	this := SftpAllOf{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *SftpAllOf) GetConfig() SftpConfig {
	if o == nil || o.Config == nil {
		var ret SftpConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SftpAllOf) GetConfigOk() (*SftpConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *SftpAllOf) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given SftpConfig and assigns it to the Config field.
func (o *SftpAllOf) SetConfig(v SftpConfig) {
	o.Config = &v
}

func (o SftpAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableSftpAllOf struct {
	value *SftpAllOf
	isSet bool
}

func (v NullableSftpAllOf) Get() *SftpAllOf {
	return v.value
}

func (v *NullableSftpAllOf) Set(val *SftpAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSftpAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSftpAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSftpAllOf(val *SftpAllOf) *NullableSftpAllOf {
	return &NullableSftpAllOf{value: val, isSet: true}
}

func (v NullableSftpAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSftpAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


